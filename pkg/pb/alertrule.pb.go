// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alertrule.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// alert rule
type AlertRule struct {
	AlertRuleId          string      `protobuf:"bytes,1,opt,name=alert_rule_id,json=alertRuleId,proto3" json:"alert_rule_id,omitempty"`
	AlertRuleName        string      `protobuf:"bytes,2,opt,name=alert_rule_name,json=alertRuleName,proto3" json:"alert_rule_name,omitempty"`
	AlertRuleGroupId     string      `protobuf:"bytes,3,opt,name=alert_rule_group_id,json=alertRuleGroupId,proto3" json:"alert_rule_group_id,omitempty"`
	MetricName           string      `protobuf:"bytes,4,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`
	ConditionType        string      `protobuf:"bytes,5,opt,name=condition_type,json=conditionType,proto3" json:"condition_type,omitempty"`
	PreferSeverity       bool        `protobuf:"varint,6,opt,name=prefer_severity,json=preferSeverity,proto3" json:"prefer_severity,omitempty"`
	Threshold            float32     `protobuf:"fixed32,7,opt,name=threshold,proto3" json:"threshold,omitempty"`
	Unit                 string      `protobuf:"bytes,8,opt,name=unit,proto3" json:"unit,omitempty"`
	Period               int32       `protobuf:"varint,9,opt,name=period,proto3" json:"period,omitempty"`
	ConsecutiveCount     int32       `protobuf:"varint,10,opt,name=consecutive_count,json=consecutiveCount,proto3" json:"consecutive_count,omitempty"`
	InhibitRuleEnable    bool        `protobuf:"varint,11,opt,name=inhibit_rule_enable,json=inhibitRuleEnable,proto3" json:"inhibit_rule_enable,omitempty"`
	Enable               bool        `protobuf:"varint,12,opt,name=enable,proto3" json:"enable,omitempty"`
	SystemRule           bool        `protobuf:"varint,13,opt,name=system_rule,json=systemRule,proto3" json:"system_rule,omitempty"`
	RepeatSend           *RepeatSend `protobuf:"bytes,14,opt,name=repeat_send,json=repeatSend,proto3" json:"repeat_send,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AlertRule) Reset()         { *m = AlertRule{} }
func (m *AlertRule) String() string { return proto.CompactTextString(m) }
func (*AlertRule) ProtoMessage()    {}
func (*AlertRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbcdd77e19c96391, []int{0}
}

func (m *AlertRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlertRule.Unmarshal(m, b)
}
func (m *AlertRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlertRule.Marshal(b, m, deterministic)
}
func (m *AlertRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlertRule.Merge(m, src)
}
func (m *AlertRule) XXX_Size() int {
	return xxx_messageInfo_AlertRule.Size(m)
}
func (m *AlertRule) XXX_DiscardUnknown() {
	xxx_messageInfo_AlertRule.DiscardUnknown(m)
}

var xxx_messageInfo_AlertRule proto.InternalMessageInfo

func (m *AlertRule) GetAlertRuleId() string {
	if m != nil {
		return m.AlertRuleId
	}
	return ""
}

func (m *AlertRule) GetAlertRuleName() string {
	if m != nil {
		return m.AlertRuleName
	}
	return ""
}

func (m *AlertRule) GetAlertRuleGroupId() string {
	if m != nil {
		return m.AlertRuleGroupId
	}
	return ""
}

func (m *AlertRule) GetMetricName() string {
	if m != nil {
		return m.MetricName
	}
	return ""
}

func (m *AlertRule) GetConditionType() string {
	if m != nil {
		return m.ConditionType
	}
	return ""
}

func (m *AlertRule) GetPreferSeverity() bool {
	if m != nil {
		return m.PreferSeverity
	}
	return false
}

func (m *AlertRule) GetThreshold() float32 {
	if m != nil {
		return m.Threshold
	}
	return 0
}

func (m *AlertRule) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *AlertRule) GetPeriod() int32 {
	if m != nil {
		return m.Period
	}
	return 0
}

func (m *AlertRule) GetConsecutiveCount() int32 {
	if m != nil {
		return m.ConsecutiveCount
	}
	return 0
}

func (m *AlertRule) GetInhibitRuleEnable() bool {
	if m != nil {
		return m.InhibitRuleEnable
	}
	return false
}

func (m *AlertRule) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *AlertRule) GetSystemRule() bool {
	if m != nil {
		return m.SystemRule
	}
	return false
}

func (m *AlertRule) GetRepeatSend() *RepeatSend {
	if m != nil {
		return m.RepeatSend
	}
	return nil
}

type AlertRuleGroupSpec struct {
	AlertRuleGroupId string `protobuf:"bytes,1,opt,name=alert_rule_group_id,json=alertRuleGroupId,proto3" json:"alert_rule_group_id,omitempty"`
	// list/delete bulid-in alert rules
	ResourceTypeId       string   `protobuf:"bytes,2,opt,name=resource_type_id,json=resourceTypeId,proto3" json:"resource_type_id,omitempty"`
	SystemRule           bool     `protobuf:"varint,3,opt,name=system_rule,json=systemRule,proto3" json:"system_rule,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AlertRuleGroupSpec) Reset()         { *m = AlertRuleGroupSpec{} }
func (m *AlertRuleGroupSpec) String() string { return proto.CompactTextString(m) }
func (*AlertRuleGroupSpec) ProtoMessage()    {}
func (*AlertRuleGroupSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbcdd77e19c96391, []int{1}
}

func (m *AlertRuleGroupSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlertRuleGroupSpec.Unmarshal(m, b)
}
func (m *AlertRuleGroupSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlertRuleGroupSpec.Marshal(b, m, deterministic)
}
func (m *AlertRuleGroupSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlertRuleGroupSpec.Merge(m, src)
}
func (m *AlertRuleGroupSpec) XXX_Size() int {
	return xxx_messageInfo_AlertRuleGroupSpec.Size(m)
}
func (m *AlertRuleGroupSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_AlertRuleGroupSpec.DiscardUnknown(m)
}

var xxx_messageInfo_AlertRuleGroupSpec proto.InternalMessageInfo

func (m *AlertRuleGroupSpec) GetAlertRuleGroupId() string {
	if m != nil {
		return m.AlertRuleGroupId
	}
	return ""
}

func (m *AlertRuleGroupSpec) GetResourceTypeId() string {
	if m != nil {
		return m.ResourceTypeId
	}
	return ""
}

func (m *AlertRuleGroupSpec) GetSystemRule() bool {
	if m != nil {
		return m.SystemRule
	}
	return false
}

type AlertRuleGroupResponse struct {
	AlertRuleGroup       *AlertRuleGroup `protobuf:"bytes,1,opt,name=alert_rule_group,json=alertRuleGroup,proto3" json:"alert_rule_group,omitempty"`
	Error                *Error          `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AlertRuleGroupResponse) Reset()         { *m = AlertRuleGroupResponse{} }
func (m *AlertRuleGroupResponse) String() string { return proto.CompactTextString(m) }
func (*AlertRuleGroupResponse) ProtoMessage()    {}
func (*AlertRuleGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbcdd77e19c96391, []int{2}
}

func (m *AlertRuleGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlertRuleGroupResponse.Unmarshal(m, b)
}
func (m *AlertRuleGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlertRuleGroupResponse.Marshal(b, m, deterministic)
}
func (m *AlertRuleGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlertRuleGroupResponse.Merge(m, src)
}
func (m *AlertRuleGroupResponse) XXX_Size() int {
	return xxx_messageInfo_AlertRuleGroupResponse.Size(m)
}
func (m *AlertRuleGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AlertRuleGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AlertRuleGroupResponse proto.InternalMessageInfo

func (m *AlertRuleGroupResponse) GetAlertRuleGroup() *AlertRuleGroup {
	if m != nil {
		return m.AlertRuleGroup
	}
	return nil
}

func (m *AlertRuleGroupResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// alert rule group
type AlertRuleGroup struct {
	AlertRuleGroupId     string       `protobuf:"bytes,1,opt,name=alert_rule_group_id,json=alertRuleGroupId,proto3" json:"alert_rule_group_id,omitempty"`
	AlertRuleGroupName   string       `protobuf:"bytes,2,opt,name=alert_rule_group_name,json=alertRuleGroupName,proto3" json:"alert_rule_group_name,omitempty"`
	Desc                 string       `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	AlertRules           []*AlertRule `protobuf:"bytes,4,rep,name=alert_rules,json=alertRules,proto3" json:"alert_rules,omitempty"`
	SystemRule           bool         `protobuf:"varint,5,opt,name=system_rule,json=systemRule,proto3" json:"system_rule,omitempty"`
	ResourceTypeId       string       `protobuf:"bytes,6,opt,name=resource_type_id,json=resourceTypeId,proto3" json:"resource_type_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AlertRuleGroup) Reset()         { *m = AlertRuleGroup{} }
func (m *AlertRuleGroup) String() string { return proto.CompactTextString(m) }
func (*AlertRuleGroup) ProtoMessage()    {}
func (*AlertRuleGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbcdd77e19c96391, []int{3}
}

func (m *AlertRuleGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlertRuleGroup.Unmarshal(m, b)
}
func (m *AlertRuleGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlertRuleGroup.Marshal(b, m, deterministic)
}
func (m *AlertRuleGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlertRuleGroup.Merge(m, src)
}
func (m *AlertRuleGroup) XXX_Size() int {
	return xxx_messageInfo_AlertRuleGroup.Size(m)
}
func (m *AlertRuleGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_AlertRuleGroup.DiscardUnknown(m)
}

var xxx_messageInfo_AlertRuleGroup proto.InternalMessageInfo

func (m *AlertRuleGroup) GetAlertRuleGroupId() string {
	if m != nil {
		return m.AlertRuleGroupId
	}
	return ""
}

func (m *AlertRuleGroup) GetAlertRuleGroupName() string {
	if m != nil {
		return m.AlertRuleGroupName
	}
	return ""
}

func (m *AlertRuleGroup) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *AlertRuleGroup) GetAlertRules() []*AlertRule {
	if m != nil {
		return m.AlertRules
	}
	return nil
}

func (m *AlertRuleGroup) GetSystemRule() bool {
	if m != nil {
		return m.SystemRule
	}
	return false
}

func (m *AlertRuleGroup) GetResourceTypeId() string {
	if m != nil {
		return m.ResourceTypeId
	}
	return ""
}

func init() {
	proto.RegisterType((*AlertRule)(nil), "pb.AlertRule")
	proto.RegisterType((*AlertRuleGroupSpec)(nil), "pb.AlertRuleGroupSpec")
	proto.RegisterType((*AlertRuleGroupResponse)(nil), "pb.AlertRuleGroupResponse")
	proto.RegisterType((*AlertRuleGroup)(nil), "pb.AlertRuleGroup")
}

func init() { proto.RegisterFile("alertrule.proto", fileDescriptor_dbcdd77e19c96391) }

var fileDescriptor_dbcdd77e19c96391 = []byte{
	// 596 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x4f, 0x6f, 0xd3, 0x4e,
	0x10, 0xfd, 0xd9, 0x75, 0xf2, 0x6b, 0xc6, 0x8d, 0xe3, 0x6e, 0x45, 0xb5, 0x8a, 0x90, 0x6a, 0x59,
	0x02, 0x2c, 0x21, 0x82, 0x08, 0x57, 0x2e, 0x25, 0xad, 0x4a, 0x2f, 0x1c, 0x5c, 0xb8, 0x70, 0xb1,
	0xfc, 0x67, 0xa0, 0x96, 0x1c, 0x7b, 0xb5, 0x5e, 0x17, 0xe5, 0xc8, 0x8d, 0x13, 0x5f, 0x84, 0x2f,
	0x89, 0x76, 0xd7, 0x75, 0xe2, 0x24, 0x15, 0x42, 0xbd, 0xad, 0xdf, 0xbc, 0x79, 0x33, 0x3b, 0x6f,
	0xd6, 0x30, 0x89, 0x0b, 0xe4, 0x82, 0x37, 0x05, 0xce, 0x18, 0xaf, 0x44, 0x45, 0x4c, 0x96, 0x4c,
	0x6d, 0xe4, 0xbc, 0xe2, 0x1a, 0x98, 0xba, 0x1c, 0x19, 0xc6, 0xa2, 0xc6, 0x32, 0xd3, 0x88, 0xff,
	0xd3, 0x82, 0xd1, 0xb9, 0x4c, 0x0b, 0x9b, 0x02, 0x89, 0x0f, 0x63, 0xa5, 0x11, 0x49, 0x91, 0x28,
	0xcf, 0xa8, 0xe1, 0x19, 0xc1, 0x28, 0xb4, 0xe3, 0x7b, 0xc6, 0x75, 0x46, 0x9e, 0xb7, 0x75, 0x34,
	0xa7, 0x8c, 0x97, 0x48, 0x4d, 0xc5, 0x1a, 0x77, 0xac, 0x8f, 0xf1, 0x12, 0xc9, 0x2b, 0x38, 0xd9,
	0xe0, 0x7d, 0xe3, 0x55, 0xc3, 0xa4, 0xe2, 0x81, 0xe2, 0xba, 0x1d, 0xf7, 0x4a, 0x06, 0xae, 0x33,
	0x72, 0x06, 0xf6, 0x12, 0x05, 0xcf, 0x53, 0x2d, 0x69, 0x29, 0x1a, 0x68, 0x48, 0xe9, 0x3d, 0x03,
	0x27, 0xad, 0xca, 0x2c, 0x17, 0x79, 0x55, 0x46, 0x62, 0xc5, 0x90, 0x0e, 0x74, 0xd9, 0x0e, 0xfd,
	0xb4, 0x62, 0x48, 0x5e, 0xc0, 0x84, 0x71, 0xfc, 0x8a, 0x3c, 0xaa, 0xf1, 0x0e, 0x79, 0x2e, 0x56,
	0x74, 0xe8, 0x19, 0xc1, 0x61, 0xe8, 0x68, 0xf8, 0xa6, 0x45, 0xc9, 0x53, 0x18, 0x89, 0x5b, 0x8e,
	0xf5, 0x6d, 0x55, 0x64, 0xf4, 0x7f, 0xcf, 0x08, 0xcc, 0x70, 0x0d, 0x10, 0x02, 0x56, 0x53, 0xe6,
	0x82, 0x1e, 0xaa, 0x1a, 0xea, 0x4c, 0x4e, 0x61, 0xc8, 0x90, 0xe7, 0x55, 0x46, 0x47, 0x9e, 0x11,
	0x0c, 0xc2, 0xf6, 0x8b, 0xbc, 0x84, 0xe3, 0xb4, 0x2a, 0x6b, 0x4c, 0x1b, 0x91, 0xdf, 0x61, 0x94,
	0x56, 0x4d, 0x29, 0x28, 0x28, 0x8a, 0xbb, 0x11, 0x58, 0x48, 0x9c, 0xcc, 0xe0, 0x24, 0x2f, 0x6f,
	0xf3, 0x24, 0x6f, 0x07, 0x83, 0x65, 0x9c, 0x14, 0x48, 0x6d, 0xd5, 0xe3, 0x71, 0x1b, 0x92, 0x83,
	0xb9, 0x54, 0x01, 0x59, 0xb4, 0xa5, 0x1c, 0x29, 0x4a, 0xfb, 0x25, 0xe7, 0x55, 0xaf, 0x6a, 0x81,
	0x4b, 0x25, 0x43, 0xc7, 0x2a, 0x08, 0x1a, 0x52, 0x5e, 0xbe, 0x06, 0x5b, 0xbb, 0x1d, 0x49, 0xbb,
	0xa9, 0xe3, 0x19, 0x81, 0x3d, 0x77, 0x66, 0x2c, 0x99, 0x85, 0x0a, 0xbe, 0xc1, 0x32, 0x0b, 0x81,
	0x77, 0x67, 0xff, 0x97, 0x01, 0xe4, 0xbc, 0x67, 0xcb, 0x0d, 0xc3, 0xf4, 0x21, 0x1f, 0x8d, 0x07,
	0x7c, 0x0c, 0xc0, 0xe5, 0x58, 0x57, 0x0d, 0x4f, 0x51, 0xb9, 0x24, 0xb9, 0x7a, 0x3f, 0x9c, 0x7b,
	0x5c, 0xfa, 0xa4, 0x1d, 0xdf, 0xbc, 0xc1, 0xc1, 0xf6, 0x0d, 0xfc, 0xef, 0x70, 0xda, 0xef, 0x27,
	0xc4, 0x9a, 0xc9, 0x79, 0x92, 0x77, 0xe0, 0x6e, 0xf7, 0xa4, 0x1a, 0xb2, 0xe7, 0x44, 0x5e, 0x70,
	0x2b, 0xcb, 0xe9, 0x37, 0x49, 0xce, 0x60, 0xa0, 0x1e, 0x85, 0xea, 0xcb, 0x9e, 0x8f, 0x64, 0xca,
	0xa5, 0x04, 0x42, 0x8d, 0xfb, 0x3f, 0x4c, 0x70, 0xfa, 0x1a, 0xff, 0x3a, 0x85, 0x37, 0xf0, 0x64,
	0x87, 0xbe, 0xf1, 0x54, 0x48, 0x3f, 0x41, 0xed, 0x37, 0x01, 0x2b, 0xc3, 0x3a, 0x6d, 0x1f, 0x88,
	0x3a, 0x93, 0x19, 0xd8, 0x6b, 0x99, 0x9a, 0x5a, 0xde, 0x41, 0x60, 0xcf, 0xc7, 0xbd, 0x2b, 0x86,
	0xd0, 0x69, 0xd5, 0xdb, 0x23, 0x1d, 0xec, 0x2c, 0xc5, 0x3e, 0x77, 0x86, 0xfb, 0xdc, 0x99, 0xff,
	0x36, 0xc1, 0xed, 0x8a, 0x7c, 0x88, 0xcb, 0xac, 0x40, 0x4e, 0x16, 0x30, 0x59, 0x70, 0x8c, 0x05,
	0xae, 0x7f, 0x19, 0x7b, 0x06, 0x3e, 0x9d, 0xee, 0x31, 0xa1, 0xb5, 0xce, 0xff, 0x8f, 0x5c, 0xc1,
	0xe4, 0x02, 0x0b, 0xdc, 0x14, 0x39, 0xdd, 0x4d, 0x90, 0xbb, 0xf7, 0x17, 0xa1, 0x05, 0x4c, 0x3e,
	0xb3, 0xec, 0x91, 0xdd, 0x5c, 0xc0, 0xd1, 0x15, 0x8a, 0x47, 0xb6, 0xf2, 0xde, 0xfa, 0x62, 0xb2,
	0x24, 0x19, 0xaa, 0x7f, 0xea, 0xdb, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x62, 0x86, 0xd1, 0xe3,
	0x89, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AlertRuleHandlerClient is the client API for AlertRuleHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AlertRuleHandlerClient interface {
	// alert rule
	CreateAlertRule(ctx context.Context, in *AlertRuleGroup, opts ...grpc.CallOption) (*AlertRuleGroupResponse, error)
	DeleteAlertRule(ctx context.Context, in *AlertRuleGroupSpec, opts ...grpc.CallOption) (*AlertRuleGroupResponse, error)
	UpdateAlertRule(ctx context.Context, in *AlertRuleGroup, opts ...grpc.CallOption) (*AlertRuleGroupResponse, error)
	GetAlertRule(ctx context.Context, in *AlertRuleGroupSpec, opts ...grpc.CallOption) (*AlertRuleGroupResponse, error)
}

type alertRuleHandlerClient struct {
	cc *grpc.ClientConn
}

func NewAlertRuleHandlerClient(cc *grpc.ClientConn) AlertRuleHandlerClient {
	return &alertRuleHandlerClient{cc}
}

func (c *alertRuleHandlerClient) CreateAlertRule(ctx context.Context, in *AlertRuleGroup, opts ...grpc.CallOption) (*AlertRuleGroupResponse, error) {
	out := new(AlertRuleGroupResponse)
	err := c.cc.Invoke(ctx, "/pb.AlertRuleHandler/CreateAlertRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertRuleHandlerClient) DeleteAlertRule(ctx context.Context, in *AlertRuleGroupSpec, opts ...grpc.CallOption) (*AlertRuleGroupResponse, error) {
	out := new(AlertRuleGroupResponse)
	err := c.cc.Invoke(ctx, "/pb.AlertRuleHandler/DeleteAlertRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertRuleHandlerClient) UpdateAlertRule(ctx context.Context, in *AlertRuleGroup, opts ...grpc.CallOption) (*AlertRuleGroupResponse, error) {
	out := new(AlertRuleGroupResponse)
	err := c.cc.Invoke(ctx, "/pb.AlertRuleHandler/UpdateAlertRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertRuleHandlerClient) GetAlertRule(ctx context.Context, in *AlertRuleGroupSpec, opts ...grpc.CallOption) (*AlertRuleGroupResponse, error) {
	out := new(AlertRuleGroupResponse)
	err := c.cc.Invoke(ctx, "/pb.AlertRuleHandler/GetAlertRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AlertRuleHandlerServer is the server API for AlertRuleHandler service.
type AlertRuleHandlerServer interface {
	// alert rule
	CreateAlertRule(context.Context, *AlertRuleGroup) (*AlertRuleGroupResponse, error)
	DeleteAlertRule(context.Context, *AlertRuleGroupSpec) (*AlertRuleGroupResponse, error)
	UpdateAlertRule(context.Context, *AlertRuleGroup) (*AlertRuleGroupResponse, error)
	GetAlertRule(context.Context, *AlertRuleGroupSpec) (*AlertRuleGroupResponse, error)
}

func RegisterAlertRuleHandlerServer(s *grpc.Server, srv AlertRuleHandlerServer) {
	s.RegisterService(&_AlertRuleHandler_serviceDesc, srv)
}

func _AlertRuleHandler_CreateAlertRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertRuleGroup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertRuleHandlerServer).CreateAlertRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertRuleHandler/CreateAlertRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertRuleHandlerServer).CreateAlertRule(ctx, req.(*AlertRuleGroup))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertRuleHandler_DeleteAlertRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertRuleGroupSpec)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertRuleHandlerServer).DeleteAlertRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertRuleHandler/DeleteAlertRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertRuleHandlerServer).DeleteAlertRule(ctx, req.(*AlertRuleGroupSpec))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertRuleHandler_UpdateAlertRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertRuleGroup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertRuleHandlerServer).UpdateAlertRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertRuleHandler/UpdateAlertRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertRuleHandlerServer).UpdateAlertRule(ctx, req.(*AlertRuleGroup))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertRuleHandler_GetAlertRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertRuleGroupSpec)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertRuleHandlerServer).GetAlertRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertRuleHandler/GetAlertRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertRuleHandlerServer).GetAlertRule(ctx, req.(*AlertRuleGroupSpec))
	}
	return interceptor(ctx, in, info, handler)
}

var _AlertRuleHandler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.AlertRuleHandler",
	HandlerType: (*AlertRuleHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAlertRule",
			Handler:    _AlertRuleHandler_CreateAlertRule_Handler,
		},
		{
			MethodName: "DeleteAlertRule",
			Handler:    _AlertRuleHandler_DeleteAlertRule_Handler,
		},
		{
			MethodName: "UpdateAlertRule",
			Handler:    _AlertRuleHandler_UpdateAlertRule_Handler,
		},
		{
			MethodName: "GetAlertRule",
			Handler:    _AlertRuleHandler_GetAlertRule_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "alertrule.proto",
}
