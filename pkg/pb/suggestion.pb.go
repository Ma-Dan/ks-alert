// Code generated by protoc-gen-go. DO NOT EDIT.
// source: suggestion.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Message struct {
	UserName             string   `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Text                 string   `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef76f964fb1cde52, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *Message) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Message) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Message) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

// suggestion
type Suggestion struct {
	ResourceId           string     `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	AlertRuleId          string     `protobuf:"bytes,2,opt,name=alert_rule_id,json=alertRuleId,proto3" json:"alert_rule_id,omitempty"`
	Messages             []*Message `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Suggestion) Reset()         { *m = Suggestion{} }
func (m *Suggestion) String() string { return proto.CompactTextString(m) }
func (*Suggestion) ProtoMessage()    {}
func (*Suggestion) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef76f964fb1cde52, []int{1}
}

func (m *Suggestion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Suggestion.Unmarshal(m, b)
}
func (m *Suggestion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Suggestion.Marshal(b, m, deterministic)
}
func (m *Suggestion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Suggestion.Merge(m, src)
}
func (m *Suggestion) XXX_Size() int {
	return xxx_messageInfo_Suggestion.Size(m)
}
func (m *Suggestion) XXX_DiscardUnknown() {
	xxx_messageInfo_Suggestion.DiscardUnknown(m)
}

var xxx_messageInfo_Suggestion proto.InternalMessageInfo

func (m *Suggestion) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *Suggestion) GetAlertRuleId() string {
	if m != nil {
		return m.AlertRuleId
	}
	return ""
}

func (m *Suggestion) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

type SuggestionResponse struct {
	Suggestion           *Suggestion `protobuf:"bytes,1,opt,name=suggestion,proto3" json:"suggestion,omitempty"`
	Error                *Error      `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SuggestionResponse) Reset()         { *m = SuggestionResponse{} }
func (m *SuggestionResponse) String() string { return proto.CompactTextString(m) }
func (*SuggestionResponse) ProtoMessage()    {}
func (*SuggestionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef76f964fb1cde52, []int{2}
}

func (m *SuggestionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestionResponse.Unmarshal(m, b)
}
func (m *SuggestionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestionResponse.Marshal(b, m, deterministic)
}
func (m *SuggestionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestionResponse.Merge(m, src)
}
func (m *SuggestionResponse) XXX_Size() int {
	return xxx_messageInfo_SuggestionResponse.Size(m)
}
func (m *SuggestionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestionResponse proto.InternalMessageInfo

func (m *SuggestionResponse) GetSuggestion() *Suggestion {
	if m != nil {
		return m.Suggestion
	}
	return nil
}

func (m *SuggestionResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*Message)(nil), "pb.Message")
	proto.RegisterType((*Suggestion)(nil), "pb.Suggestion")
	proto.RegisterType((*SuggestionResponse)(nil), "pb.SuggestionResponse")
}

func init() { proto.RegisterFile("suggestion.proto", fileDescriptor_ef76f964fb1cde52) }

var fileDescriptor_ef76f964fb1cde52 = []byte{
	// 313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0x31, 0x4f, 0xfb, 0x30,
	0x10, 0xc5, 0xff, 0x69, 0xfa, 0x6f, 0x9b, 0xb3, 0x8a, 0xca, 0x0d, 0x10, 0x15, 0xa4, 0x56, 0x59,
	0xe8, 0x94, 0x21, 0x4c, 0x48, 0x4c, 0x48, 0x08, 0x3a, 0xc0, 0x60, 0xc4, 0xc2, 0x52, 0x39, 0xe4,
	0x54, 0x55, 0x4a, 0x62, 0x63, 0x3b, 0x12, 0xe2, 0x33, 0xf0, 0xa1, 0x91, 0x9d, 0xd2, 0x44, 0x1d,
	0xd9, 0x92, 0xdf, 0xbd, 0xbb, 0xf7, 0xee, 0x0c, 0x33, 0xd3, 0x6c, 0xb7, 0x64, 0xec, 0x4e, 0xd6,
	0xa9, 0xd2, 0xd2, 0x4a, 0x1c, 0xa8, 0x7c, 0xce, 0x48, 0x6b, 0xa9, 0x5b, 0x90, 0x7c, 0xc0, 0xf8,
	0x89, 0x8c, 0x11, 0x5b, 0xc2, 0x0b, 0x88, 0x1a, 0x43, 0x7a, 0x53, 0x8b, 0x8a, 0xe2, 0x60, 0x19,
	0xac, 0x22, 0x3e, 0x71, 0xe0, 0x59, 0x54, 0x84, 0xe7, 0x30, 0xf6, 0xc5, 0x5d, 0x11, 0x0f, 0x7c,
	0x69, 0xe4, 0x7e, 0xd7, 0x05, 0x5e, 0x42, 0x64, 0x77, 0x15, 0x19, 0x2b, 0x2a, 0x15, 0x87, 0xcb,
	0x60, 0x15, 0xf2, 0x0e, 0x20, 0xc2, 0xd0, 0xd2, 0xa7, 0x8d, 0x87, 0xbe, 0xc7, 0x7f, 0x27, 0x5f,
	0x00, 0x2f, 0x87, 0x5c, 0xb8, 0x00, 0xa6, 0xc9, 0xc8, 0x46, 0xbf, 0x93, 0x1b, 0xde, 0xfa, 0xc2,
	0x2f, 0x5a, 0x17, 0x98, 0xc0, 0x54, 0x94, 0xa4, 0xed, 0x46, 0x37, 0x25, 0x75, 0xfe, 0xcc, 0x43,
	0xde, 0x94, 0x4e, 0x73, 0x05, 0x93, 0xaa, 0xdd, 0xc2, 0xc4, 0xe1, 0x32, 0x5c, 0xb1, 0x8c, 0xa5,
	0x2a, 0x4f, 0xf7, 0x9b, 0xf1, 0x43, 0x31, 0x21, 0xc0, 0xce, 0x9b, 0x93, 0x51, 0xb2, 0x36, 0x84,
	0x29, 0x40, 0x77, 0x29, 0x1f, 0x81, 0x65, 0x27, 0x6e, 0x40, 0x4f, 0xdb, 0x53, 0xe0, 0x02, 0xfe,
	0xfb, 0x1b, 0xfa, 0x28, 0x2c, 0x8b, 0x9c, 0xf4, 0xde, 0x01, 0xde, 0xf2, 0xec, 0x3b, 0x80, 0xd3,
	0xae, 0xf7, 0x51, 0xd4, 0x45, 0x49, 0x1a, 0x6f, 0x61, 0xf6, 0xaa, 0x0a, 0x61, 0xa9, 0xb7, 0xfe,
	0x91, 0xcd, 0xfc, 0xec, 0xc8, 0x76, 0x1f, 0x31, 0xf9, 0x87, 0x37, 0x30, 0x7d, 0x20, 0xfb, 0x97,
	0xd6, 0xbb, 0xe1, 0xdb, 0x40, 0xe5, 0xf9, 0xc8, 0xbf, 0xf8, 0xf5, 0x4f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xe7, 0xfe, 0xc5, 0x0e, 0x16, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SuggestionHandlerClient is the client API for SuggestionHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SuggestionHandlerClient interface {
	// suggestion
	UpdateSuggestion(ctx context.Context, in *Suggestion, opts ...grpc.CallOption) (*SuggestionResponse, error)
	GetSuggestion(ctx context.Context, in *Suggestion, opts ...grpc.CallOption) (*SuggestionResponse, error)
}

type suggestionHandlerClient struct {
	cc *grpc.ClientConn
}

func NewSuggestionHandlerClient(cc *grpc.ClientConn) SuggestionHandlerClient {
	return &suggestionHandlerClient{cc}
}

func (c *suggestionHandlerClient) UpdateSuggestion(ctx context.Context, in *Suggestion, opts ...grpc.CallOption) (*SuggestionResponse, error) {
	out := new(SuggestionResponse)
	err := c.cc.Invoke(ctx, "/pb.SuggestionHandler/UpdateSuggestion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *suggestionHandlerClient) GetSuggestion(ctx context.Context, in *Suggestion, opts ...grpc.CallOption) (*SuggestionResponse, error) {
	out := new(SuggestionResponse)
	err := c.cc.Invoke(ctx, "/pb.SuggestionHandler/GetSuggestion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SuggestionHandlerServer is the server API for SuggestionHandler service.
type SuggestionHandlerServer interface {
	// suggestion
	UpdateSuggestion(context.Context, *Suggestion) (*SuggestionResponse, error)
	GetSuggestion(context.Context, *Suggestion) (*SuggestionResponse, error)
}

func RegisterSuggestionHandlerServer(s *grpc.Server, srv SuggestionHandlerServer) {
	s.RegisterService(&_SuggestionHandler_serviceDesc, srv)
}

func _SuggestionHandler_UpdateSuggestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Suggestion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SuggestionHandlerServer).UpdateSuggestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SuggestionHandler/UpdateSuggestion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SuggestionHandlerServer).UpdateSuggestion(ctx, req.(*Suggestion))
	}
	return interceptor(ctx, in, info, handler)
}

func _SuggestionHandler_GetSuggestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Suggestion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SuggestionHandlerServer).GetSuggestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SuggestionHandler/GetSuggestion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SuggestionHandlerServer).GetSuggestion(ctx, req.(*Suggestion))
	}
	return interceptor(ctx, in, info, handler)
}

var _SuggestionHandler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.SuggestionHandler",
	HandlerType: (*SuggestionHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateSuggestion",
			Handler:    _SuggestionHandler_UpdateSuggestion_Handler,
		},
		{
			MethodName: "GetSuggestion",
			Handler:    _SuggestionHandler_GetSuggestion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "suggestion.proto",
}
