// Code generated by protoc-gen-go. DO NOT EDIT.
// source: repeatsend.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RepeatSendType int32

const (
	RepeatSendType_Fixed       RepeatSendType = 0
	RepeatSendType_Exponential RepeatSendType = 1
)

var RepeatSendType_name = map[int32]string{
	0: "Fixed",
	1: "Exponential",
}

var RepeatSendType_value = map[string]int32{
	"Fixed":       0,
	"Exponential": 1,
}

func (x RepeatSendType) String() string {
	return proto.EnumName(RepeatSendType_name, int32(x))
}

func (RepeatSendType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_74f761494f2232a1, []int{0}
}

type RepeatSend struct {
	InitRepeatSendInterval uint32         `protobuf:"varint,1,opt,name=init_repeat_send_interval,json=initRepeatSendInterval,proto3" json:"init_repeat_send_interval,omitempty"`
	MaxRepeatSendCount     uint32         `protobuf:"varint,2,opt,name=max_repeat_send_count,json=maxRepeatSendCount,proto3" json:"max_repeat_send_count,omitempty"`
	RepeatSendType         RepeatSendType `protobuf:"varint,3,opt,name=repeat_send_type,json=repeatSendType,proto3,enum=pb.RepeatSendType" json:"repeat_send_type,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}       `json:"-"`
	XXX_unrecognized       []byte         `json:"-"`
	XXX_sizecache          int32          `json:"-"`
}

func (m *RepeatSend) Reset()         { *m = RepeatSend{} }
func (m *RepeatSend) String() string { return proto.CompactTextString(m) }
func (*RepeatSend) ProtoMessage()    {}
func (*RepeatSend) Descriptor() ([]byte, []int) {
	return fileDescriptor_74f761494f2232a1, []int{0}
}

func (m *RepeatSend) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepeatSend.Unmarshal(m, b)
}
func (m *RepeatSend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepeatSend.Marshal(b, m, deterministic)
}
func (m *RepeatSend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepeatSend.Merge(m, src)
}
func (m *RepeatSend) XXX_Size() int {
	return xxx_messageInfo_RepeatSend.Size(m)
}
func (m *RepeatSend) XXX_DiscardUnknown() {
	xxx_messageInfo_RepeatSend.DiscardUnknown(m)
}

var xxx_messageInfo_RepeatSend proto.InternalMessageInfo

func (m *RepeatSend) GetInitRepeatSendInterval() uint32 {
	if m != nil {
		return m.InitRepeatSendInterval
	}
	return 0
}

func (m *RepeatSend) GetMaxRepeatSendCount() uint32 {
	if m != nil {
		return m.MaxRepeatSendCount
	}
	return 0
}

func (m *RepeatSend) GetRepeatSendType() RepeatSendType {
	if m != nil {
		return m.RepeatSendType
	}
	return RepeatSendType_Fixed
}

func init() {
	proto.RegisterEnum("pb.RepeatSendType", RepeatSendType_name, RepeatSendType_value)
	proto.RegisterType((*RepeatSend)(nil), "pb.RepeatSend")
}

func init() { proto.RegisterFile("repeatsend.proto", fileDescriptor_74f761494f2232a1) }

var fileDescriptor_74f761494f2232a1 = []byte{
	// 201 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x28, 0x4a, 0x2d, 0x48,
	0x4d, 0x2c, 0x29, 0x4e, 0xcd, 0x4b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48,
	0x52, 0xda, 0xc1, 0xc8, 0xc5, 0x15, 0x04, 0x96, 0x08, 0x4e, 0xcd, 0x4b, 0x11, 0xb2, 0xe4, 0x92,
	0xcc, 0xcc, 0xcb, 0x2c, 0x89, 0x87, 0xa8, 0x8d, 0x07, 0x29, 0x8e, 0xcf, 0xcc, 0x2b, 0x49, 0x2d,
	0x2a, 0x4b, 0xcc, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0d, 0x12, 0x03, 0x29, 0x40, 0x68, 0xf1,
	0x84, 0xca, 0x0a, 0x19, 0x72, 0x89, 0xe6, 0x26, 0x56, 0xa0, 0xe8, 0x4c, 0xce, 0x2f, 0xcd, 0x2b,
	0x91, 0x60, 0x02, 0x6b, 0x13, 0xca, 0x4d, 0xac, 0x40, 0xe8, 0x72, 0x06, 0xc9, 0x08, 0xd9, 0xc0,
	0x1c, 0x05, 0x51, 0x5e, 0x52, 0x59, 0x90, 0x2a, 0xc1, 0xac, 0xc0, 0xa8, 0xc1, 0x67, 0x24, 0xa4,
	0x57, 0x90, 0xa4, 0x87, 0x50, 0x1e, 0x52, 0x59, 0x90, 0x1a, 0xc4, 0x57, 0x84, 0xc2, 0xd7, 0xd2,
	0xe1, 0xe2, 0x43, 0x55, 0x21, 0xc4, 0xc9, 0xc5, 0xea, 0x96, 0x59, 0x91, 0x9a, 0x22, 0xc0, 0x20,
	0xc4, 0xcf, 0xc5, 0xed, 0x5a, 0x51, 0x90, 0x9f, 0x97, 0x9a, 0x57, 0x92, 0x99, 0x98, 0x23, 0xc0,
	0xe8, 0xc4, 0x12, 0xc5, 0x54, 0x90, 0x94, 0xc4, 0x06, 0xf6, 0xb9, 0x31, 0x20, 0x00, 0x00, 0xff,
	0xff, 0x9e, 0x0f, 0xe2, 0x01, 0x0d, 0x01, 0x00, 0x00,
}
