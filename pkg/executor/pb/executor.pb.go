// Code generated by protoc-gen-go. DO NOT EDIT.
// source: executor.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	executor.proto

It has these top-level messages:
	AlertConfig
	Error
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AlertConfig_Signal int32

const (
	AlertConfig_RUN       AlertConfig_Signal = 0
	AlertConfig_STOP      AlertConfig_Signal = 1
	AlertConfig_Terminate AlertConfig_Signal = 2
	AlertConfig_OTHER     AlertConfig_Signal = 3
)

var AlertConfig_Signal_name = map[int32]string{
	0: "RUN",
	1: "STOP",
	2: "Terminate",
	3: "OTHER",
}
var AlertConfig_Signal_value = map[string]int32{
	"RUN":       0,
	"STOP":      1,
	"Terminate": 2,
	"OTHER":     3,
}

func (x AlertConfig_Signal) String() string {
	return proto.EnumName(AlertConfig_Signal_name, int32(x))
}
func (AlertConfig_Signal) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Error_ErrorCode int32

const (
	Error_SUCCESS           Error_ErrorCode = 0
	Error_INVALID_PARAM     Error_ErrorCode = 1
	Error_ACCESS_DENIED     Error_ErrorCode = 2
	Error_THRESHOLD_REACHED Error_ErrorCode = 3
)

var Error_ErrorCode_name = map[int32]string{
	0: "SUCCESS",
	1: "INVALID_PARAM",
	2: "ACCESS_DENIED",
	3: "THRESHOLD_REACHED",
}
var Error_ErrorCode_value = map[string]int32{
	"SUCCESS":           0,
	"INVALID_PARAM":     1,
	"ACCESS_DENIED":     2,
	"THRESHOLD_REACHED": 3,
}

func (x Error_ErrorCode) String() string {
	return proto.EnumName(Error_ErrorCode_name, int32(x))
}
func (Error_ErrorCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type AlertConfig struct {
	AlertConfigId string             `protobuf:"bytes,1,opt,name=alert_config_id" json:"alert_config_id,omitempty"`
	Signal        AlertConfig_Signal `protobuf:"varint,2,opt,name=signal,enum=executor.AlertConfig_Signal" json:"signal,omitempty"`
}

func (m *AlertConfig) Reset()                    { *m = AlertConfig{} }
func (m *AlertConfig) String() string            { return proto.CompactTextString(m) }
func (*AlertConfig) ProtoMessage()               {}
func (*AlertConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AlertConfig) GetAlertConfigId() string {
	if m != nil {
		return m.AlertConfigId
	}
	return ""
}

func (m *AlertConfig) GetSignal() AlertConfig_Signal {
	if m != nil {
		return m.Signal
	}
	return AlertConfig_RUN
}

// Error
type Error struct {
	Code Error_ErrorCode `protobuf:"varint,1,opt,name=code,enum=executor.Error_ErrorCode" json:"code,omitempty"`
	Text string          `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Error) GetCode() Error_ErrorCode {
	if m != nil {
		return m.Code
	}
	return Error_SUCCESS
}

func (m *Error) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func init() {
	proto.RegisterType((*AlertConfig)(nil), "executor.AlertConfig")
	proto.RegisterType((*Error)(nil), "executor.Error")
	proto.RegisterEnum("executor.AlertConfig_Signal", AlertConfig_Signal_name, AlertConfig_Signal_value)
	proto.RegisterEnum("executor.Error_ErrorCode", Error_ErrorCode_name, Error_ErrorCode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Executor service

type ExecutorClient interface {
	ExecuteAlertConfig(ctx context.Context, in *AlertConfig, opts ...grpc.CallOption) (*Error, error)
}

type executorClient struct {
	cc *grpc.ClientConn
}

func NewExecutorClient(cc *grpc.ClientConn) ExecutorClient {
	return &executorClient{cc}
}

func (c *executorClient) ExecuteAlertConfig(ctx context.Context, in *AlertConfig, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := grpc.Invoke(ctx, "/executor.Executor/ExecuteAlertConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Executor service

type ExecutorServer interface {
	ExecuteAlertConfig(context.Context, *AlertConfig) (*Error, error)
}

func RegisterExecutorServer(s *grpc.Server, srv ExecutorServer) {
	s.RegisterService(&_Executor_serviceDesc, srv)
}

func _Executor_ExecuteAlertConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExecutorServer).ExecuteAlertConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/executor.Executor/ExecuteAlertConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExecutorServer).ExecuteAlertConfig(ctx, req.(*AlertConfig))
	}
	return interceptor(ctx, in, info, handler)
}

var _Executor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "executor.Executor",
	HandlerType: (*ExecutorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExecuteAlertConfig",
			Handler:    _Executor_ExecuteAlertConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "executor.proto",
}

func init() { proto.RegisterFile("executor.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 307 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0x4f, 0x4f, 0x3a, 0x31,
	0x14, 0xa4, 0xcb, 0xf2, 0x67, 0x1f, 0x3f, 0xa0, 0xbc, 0x84, 0xfc, 0xd0, 0x78, 0x20, 0x7b, 0x91,
	0x83, 0xe1, 0x80, 0xf1, 0x6a, 0x52, 0x77, 0x9b, 0x2c, 0x06, 0x81, 0x6c, 0x17, 0x0f, 0x5e, 0x36,
	0xfc, 0xa9, 0x64, 0x13, 0xa4, 0xa4, 0xd6, 0x84, 0xef, 0xe0, 0xd9, 0xef, 0x6b, 0xe8, 0xaa, 0x10,
	0xe3, 0xa5, 0x99, 0xe9, 0xb4, 0x6f, 0x26, 0xf3, 0xa0, 0x21, 0xf7, 0x72, 0xf9, 0x66, 0x94, 0xee,
	0xef, 0xb4, 0x32, 0x0a, 0xab, 0xdf, 0xdc, 0x7f, 0x27, 0x50, 0x63, 0x1b, 0xa9, 0x4d, 0xa0, 0xb6,
	0xcf, 0xd9, 0x1a, 0xff, 0x43, 0x73, 0x7e, 0xa0, 0xe9, 0xd2, 0xf2, 0x34, 0x5b, 0x75, 0x48, 0x97,
	0xf4, 0x3c, 0xbc, 0x82, 0xf2, 0x6b, 0xb6, 0xde, 0xce, 0x37, 0x1d, 0xa7, 0x4b, 0x7a, 0x8d, 0xc1,
	0x45, 0xff, 0x67, 0xe6, 0xc9, 0xff, 0xbe, 0xb0, 0x6f, 0xfc, 0x1b, 0x28, 0xe7, 0x08, 0x2b, 0x50,
	0x8c, 0x67, 0x63, 0x5a, 0xc0, 0x2a, 0xb8, 0x22, 0x99, 0x4c, 0x29, 0xc1, 0x3a, 0x78, 0x89, 0xd4,
	0x2f, 0xd9, 0x76, 0x6e, 0x24, 0x75, 0xd0, 0x83, 0xd2, 0x24, 0x89, 0x78, 0x4c, 0x8b, 0xfe, 0x07,
	0x81, 0x12, 0xd7, 0x5a, 0x69, 0xbc, 0x04, 0x77, 0xa9, 0x56, 0xd2, 0x9a, 0x37, 0x06, 0x67, 0x47,
	0x33, 0x2b, 0xe7, 0x67, 0xa0, 0x56, 0x12, 0xff, 0x81, 0x6b, 0xe4, 0xde, 0xd8, 0x54, 0x9e, 0x3f,
	0x03, 0xef, 0x28, 0xd5, 0xa0, 0x22, 0x66, 0x41, 0xc0, 0x85, 0xa0, 0x05, 0x6c, 0x41, 0x7d, 0x38,
	0x7e, 0x64, 0xa3, 0x61, 0x98, 0x4e, 0x59, 0xcc, 0x1e, 0x28, 0x39, 0x5c, 0x31, 0x2b, 0xa7, 0x21,
	0x1f, 0x0f, 0x79, 0x48, 0x1d, 0x6c, 0x43, 0x2b, 0x89, 0x62, 0x2e, 0xa2, 0xc9, 0x28, 0x4c, 0x63,
	0xce, 0x82, 0x88, 0x87, 0xb4, 0x38, 0xb8, 0x87, 0x2a, 0xff, 0x0a, 0x80, 0xb7, 0x80, 0x39, 0x96,
	0xa7, 0xbd, 0xb5, 0xff, 0xac, 0xe3, 0xbc, 0xf9, 0x2b, 0xb8, 0x5f, 0xb8, 0x73, 0x9f, 0x9c, 0xdd,
	0x62, 0x51, 0xb6, 0x8b, 0xb8, 0xfe, 0x0c, 0x00, 0x00, 0xff, 0xff, 0xcc, 0x76, 0xf7, 0x4a, 0x9a,
	0x01, 0x00, 0x00,
}
