// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alert.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	alert.proto

It has these top-level messages:
	Error
	Enterprise
	GetEnterpriseResponse
	EnterpriseID
	EnterpriseResponse
	Product
	ProductID
	ProductResponse
	ResourceUriTmpls
	ResourceType
	ResourceTypeID
	ResourceTypeResponse
	AlertRule
	AlertRuleID
	AlertRuleResponse
	SilenceID
	Silence
	SilenceResponse
	ResourceGroup
	Resource
	ReceiverGroup
	Receiver
	AlertRuleGroup
	AlertConfig
	AlertConfigID
	AlertConfigResponse
	AlertHistory
	AlertHistoryRequest
	AlertHistoryResponse
	Suggestion
	SuggestionID
	SuggestionResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RepeatSendType int32

const (
	RepeatSendType_Fixed       RepeatSendType = 0
	RepeatSendType_exponential RepeatSendType = 1
)

var RepeatSendType_name = map[int32]string{
	0: "Fixed",
	1: "exponential",
}
var RepeatSendType_value = map[string]int32{
	"Fixed":       0,
	"exponential": 1,
}

func (x RepeatSendType) String() string {
	return proto.EnumName(RepeatSendType_name, int32(x))
}
func (RepeatSendType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Error_ErrorCode int32

const (
	Error_SUCCESS           Error_ErrorCode = 0
	Error_INVALID_PARAM     Error_ErrorCode = 1
	Error_ACCESS_DENIED     Error_ErrorCode = 2
	Error_THRESHOLD_REACHED Error_ErrorCode = 3
)

var Error_ErrorCode_name = map[int32]string{
	0: "SUCCESS",
	1: "INVALID_PARAM",
	2: "ACCESS_DENIED",
	3: "THRESHOLD_REACHED",
}
var Error_ErrorCode_value = map[string]int32{
	"SUCCESS":           0,
	"INVALID_PARAM":     1,
	"ACCESS_DENIED":     2,
	"THRESHOLD_REACHED": 3,
}

func (x Error_ErrorCode) String() string {
	return proto.EnumName(Error_ErrorCode_name, int32(x))
}
func (Error_ErrorCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type AlertConfig_UpdateType int32

const (
	AlertConfig_RECEIVER      AlertConfig_UpdateType = 0
	AlertConfig_ALERTRULE     AlertConfig_UpdateType = 1
	AlertConfig_RESOURCE      AlertConfig_UpdateType = 2
	AlertConfig_SEVERITY      AlertConfig_UpdateType = 3
	AlertConfig_EFFECTIVETIME AlertConfig_UpdateType = 4
	AlertConfig_ENABLE        AlertConfig_UpdateType = 5
	AlertConfig_DESC          AlertConfig_UpdateType = 6
)

var AlertConfig_UpdateType_name = map[int32]string{
	0: "RECEIVER",
	1: "ALERTRULE",
	2: "RESOURCE",
	3: "SEVERITY",
	4: "EFFECTIVETIME",
	5: "ENABLE",
	6: "DESC",
}
var AlertConfig_UpdateType_value = map[string]int32{
	"RECEIVER":      0,
	"ALERTRULE":     1,
	"RESOURCE":      2,
	"SEVERITY":      3,
	"EFFECTIVETIME": 4,
	"ENABLE":        5,
	"DESC":          6,
}

func (x AlertConfig_UpdateType) String() string {
	return proto.EnumName(AlertConfig_UpdateType_name, int32(x))
}
func (AlertConfig_UpdateType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{23, 0} }

// Error
type Error struct {
	Code Error_ErrorCode `protobuf:"varint,1,opt,name=code,enum=pb.Error_ErrorCode" json:"code,omitempty"`
	Text string          `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Error) GetCode() Error_ErrorCode {
	if m != nil {
		return m.Code
	}
	return Error_SUCCESS
}

func (m *Error) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type Enterprise struct {
	EnterpriseId   string `protobuf:"bytes,1,opt,name=enterprise_id" json:"enterprise_id,omitempty"`
	EnterpriseName string `protobuf:"bytes,2,opt,name=enterprise_name" json:"enterprise_name,omitempty"`
	HomePage       string `protobuf:"bytes,3,opt,name=home_page" json:"home_page,omitempty"`
	Address        string `protobuf:"bytes,4,opt,name=address" json:"address,omitempty"`
	Phone          string `protobuf:"bytes,5,opt,name=phone" json:"phone,omitempty"`
	Email          string `protobuf:"bytes,6,opt,name=email" json:"email,omitempty"`
	Contacts       string `protobuf:"bytes,7,opt,name=contacts" json:"contacts,omitempty"`
	Desc           string `protobuf:"bytes,8,opt,name=desc" json:"desc,omitempty"`
}

func (m *Enterprise) Reset()                    { *m = Enterprise{} }
func (m *Enterprise) String() string            { return proto.CompactTextString(m) }
func (*Enterprise) ProtoMessage()               {}
func (*Enterprise) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Enterprise) GetEnterpriseId() string {
	if m != nil {
		return m.EnterpriseId
	}
	return ""
}

func (m *Enterprise) GetEnterpriseName() string {
	if m != nil {
		return m.EnterpriseName
	}
	return ""
}

func (m *Enterprise) GetHomePage() string {
	if m != nil {
		return m.HomePage
	}
	return ""
}

func (m *Enterprise) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Enterprise) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Enterprise) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Enterprise) GetContacts() string {
	if m != nil {
		return m.Contacts
	}
	return ""
}

func (m *Enterprise) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type GetEnterpriseResponse struct {
	Enterprise *Enterprise `protobuf:"bytes,1,opt,name=enterprise" json:"enterprise,omitempty"`
	Error      *Error      `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *GetEnterpriseResponse) Reset()                    { *m = GetEnterpriseResponse{} }
func (m *GetEnterpriseResponse) String() string            { return proto.CompactTextString(m) }
func (*GetEnterpriseResponse) ProtoMessage()               {}
func (*GetEnterpriseResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetEnterpriseResponse) GetEnterprise() *Enterprise {
	if m != nil {
		return m.Enterprise
	}
	return nil
}

func (m *GetEnterpriseResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type EnterpriseID struct {
	EnterpriseId string `protobuf:"bytes,1,opt,name=enterprise_id" json:"enterprise_id,omitempty"`
}

func (m *EnterpriseID) Reset()                    { *m = EnterpriseID{} }
func (m *EnterpriseID) String() string            { return proto.CompactTextString(m) }
func (*EnterpriseID) ProtoMessage()               {}
func (*EnterpriseID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *EnterpriseID) GetEnterpriseId() string {
	if m != nil {
		return m.EnterpriseId
	}
	return ""
}

type EnterpriseResponse struct {
	EnterpriseId string `protobuf:"bytes,1,opt,name=enterprise_id" json:"enterprise_id,omitempty"`
	Error        *Error `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *EnterpriseResponse) Reset()                    { *m = EnterpriseResponse{} }
func (m *EnterpriseResponse) String() string            { return proto.CompactTextString(m) }
func (*EnterpriseResponse) ProtoMessage()               {}
func (*EnterpriseResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *EnterpriseResponse) GetEnterpriseId() string {
	if m != nil {
		return m.EnterpriseId
	}
	return ""
}

func (m *EnterpriseResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type Product struct {
	ProductId         string `protobuf:"bytes,1,opt,name=product_id" json:"product_id,omitempty"`
	ProductName       string `protobuf:"bytes,2,opt,name=product_name" json:"product_name,omitempty"`
	EnterpriseId      string `protobuf:"bytes,3,opt,name=enterprise_id" json:"enterprise_id,omitempty"`
	HomePage          string `protobuf:"bytes,4,opt,name=home_page" json:"home_page,omitempty"`
	Address           string `protobuf:"bytes,5,opt,name=address" json:"address,omitempty"`
	Phone             string `protobuf:"bytes,6,opt,name=phone" json:"phone,omitempty"`
	Email             string `protobuf:"bytes,7,opt,name=email" json:"email,omitempty"`
	MonitorCenterHost string `protobuf:"bytes,8,opt,name=monitor_center_host" json:"monitor_center_host,omitempty"`
	MonitorCenterPort int32  `protobuf:"varint,9,opt,name=monitor_center_port" json:"monitor_center_port,omitempty"`
	Contacts          string `protobuf:"bytes,10,opt,name=contacts" json:"contacts,omitempty"`
	Desc              string `protobuf:"bytes,11,opt,name=desc" json:"desc,omitempty"`
}

func (m *Product) Reset()                    { *m = Product{} }
func (m *Product) String() string            { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()               {}
func (*Product) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Product) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *Product) GetProductName() string {
	if m != nil {
		return m.ProductName
	}
	return ""
}

func (m *Product) GetEnterpriseId() string {
	if m != nil {
		return m.EnterpriseId
	}
	return ""
}

func (m *Product) GetHomePage() string {
	if m != nil {
		return m.HomePage
	}
	return ""
}

func (m *Product) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Product) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Product) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Product) GetMonitorCenterHost() string {
	if m != nil {
		return m.MonitorCenterHost
	}
	return ""
}

func (m *Product) GetMonitorCenterPort() int32 {
	if m != nil {
		return m.MonitorCenterPort
	}
	return 0
}

func (m *Product) GetContacts() string {
	if m != nil {
		return m.Contacts
	}
	return ""
}

func (m *Product) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type ProductID struct {
	ProductId string `protobuf:"bytes,1,opt,name=Product_id" json:"Product_id,omitempty"`
}

func (m *ProductID) Reset()                    { *m = ProductID{} }
func (m *ProductID) String() string            { return proto.CompactTextString(m) }
func (*ProductID) ProtoMessage()               {}
func (*ProductID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ProductID) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

type ProductResponse struct {
	ProductId *ProductID `protobuf:"bytes,1,opt,name=product_id" json:"product_id,omitempty"`
	Product   *Product   `protobuf:"bytes,2,opt,name=product" json:"product,omitempty"`
	Error     *Error     `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *ProductResponse) Reset()                    { *m = ProductResponse{} }
func (m *ProductResponse) String() string            { return proto.CompactTextString(m) }
func (*ProductResponse) ProtoMessage()               {}
func (*ProductResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ProductResponse) GetProductId() *ProductID {
	if m != nil {
		return m.ProductId
	}
	return nil
}

func (m *ProductResponse) GetProduct() *Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *ProductResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// resource type
type ResourceUriTmpls struct {
	UriTmpl      string            `protobuf:"bytes,1,opt,name=uri_tmpl" json:"uri_tmpl,omitempty"`
	ResourceName []string          `protobuf:"bytes,2,rep,name=resource_name" json:"resource_name,omitempty"`
	Params       map[string]string `protobuf:"bytes,3,rep,name=params" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ResourceUriTmpls) Reset()                    { *m = ResourceUriTmpls{} }
func (m *ResourceUriTmpls) String() string            { return proto.CompactTextString(m) }
func (*ResourceUriTmpls) ProtoMessage()               {}
func (*ResourceUriTmpls) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ResourceUriTmpls) GetUriTmpl() string {
	if m != nil {
		return m.UriTmpl
	}
	return ""
}

func (m *ResourceUriTmpls) GetResourceName() []string {
	if m != nil {
		return m.ResourceName
	}
	return nil
}

func (m *ResourceUriTmpls) GetParams() map[string]string {
	if m != nil {
		return m.Params
	}
	return nil
}

type ResourceType struct {
	ResourceTypeId    string            `protobuf:"bytes,1,opt,name=resource_type_id" json:"resource_type_id,omitempty"`
	ResourceTypeName  string            `protobuf:"bytes,2,opt,name=resource_type_name" json:"resource_type_name,omitempty"`
	ProductId         string            `protobuf:"bytes,3,opt,name=product_id" json:"product_id,omitempty"`
	MonitorCenterHost string            `protobuf:"bytes,4,opt,name=monitor_center_host" json:"monitor_center_host,omitempty"`
	MonitorCenterPort int32             `protobuf:"varint,5,opt,name=monitor_center_port" json:"monitor_center_port,omitempty"`
	ResourceUriTmpl   *ResourceUriTmpls `protobuf:"bytes,6,opt,name=resource_uri_tmpl" json:"resource_uri_tmpl,omitempty"`
	Enable            bool              `protobuf:"varint,7,opt,name=enable" json:"enable,omitempty"`
	Desc              string            `protobuf:"bytes,8,opt,name=desc" json:"desc,omitempty"`
}

func (m *ResourceType) Reset()                    { *m = ResourceType{} }
func (m *ResourceType) String() string            { return proto.CompactTextString(m) }
func (*ResourceType) ProtoMessage()               {}
func (*ResourceType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ResourceType) GetResourceTypeId() string {
	if m != nil {
		return m.ResourceTypeId
	}
	return ""
}

func (m *ResourceType) GetResourceTypeName() string {
	if m != nil {
		return m.ResourceTypeName
	}
	return ""
}

func (m *ResourceType) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *ResourceType) GetMonitorCenterHost() string {
	if m != nil {
		return m.MonitorCenterHost
	}
	return ""
}

func (m *ResourceType) GetMonitorCenterPort() int32 {
	if m != nil {
		return m.MonitorCenterPort
	}
	return 0
}

func (m *ResourceType) GetResourceUriTmpl() *ResourceUriTmpls {
	if m != nil {
		return m.ResourceUriTmpl
	}
	return nil
}

func (m *ResourceType) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *ResourceType) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type ResourceTypeID struct {
	ResourceTypeId string `protobuf:"bytes,1,opt,name=resource_type_id" json:"resource_type_id,omitempty"`
}

func (m *ResourceTypeID) Reset()                    { *m = ResourceTypeID{} }
func (m *ResourceTypeID) String() string            { return proto.CompactTextString(m) }
func (*ResourceTypeID) ProtoMessage()               {}
func (*ResourceTypeID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ResourceTypeID) GetResourceTypeId() string {
	if m != nil {
		return m.ResourceTypeId
	}
	return ""
}

type ResourceTypeResponse struct {
	ResourceTypeId *ResourceTypeID `protobuf:"bytes,1,opt,name=resource_type_id" json:"resource_type_id,omitempty"`
	ResourceType   *ResourceType   `protobuf:"bytes,2,opt,name=resource_type" json:"resource_type,omitempty"`
	Error          *Error          `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *ResourceTypeResponse) Reset()                    { *m = ResourceTypeResponse{} }
func (m *ResourceTypeResponse) String() string            { return proto.CompactTextString(m) }
func (*ResourceTypeResponse) ProtoMessage()               {}
func (*ResourceTypeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ResourceTypeResponse) GetResourceTypeId() *ResourceTypeID {
	if m != nil {
		return m.ResourceTypeId
	}
	return nil
}

func (m *ResourceTypeResponse) GetResourceType() *ResourceType {
	if m != nil {
		return m.ResourceType
	}
	return nil
}

func (m *ResourceTypeResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// alert rule
type AlertRule struct {
	AlertRuleId               string         `protobuf:"bytes,1,opt,name=alert_rule_id" json:"alert_rule_id,omitempty"`
	AlertRuleName             string         `protobuf:"bytes,2,opt,name=alert_rule_name" json:"alert_rule_name,omitempty"`
	RepeatSendType            RepeatSendType `protobuf:"varint,3,opt,name=repeat_send_type,enum=pb.RepeatSendType" json:"repeat_send_type,omitempty"`
	InitReapeatSenderInterval int32          `protobuf:"varint,4,opt,name=init_reapeat_sender_interval" json:"init_reapeat_sender_interval,omitempty"`
	MaxRepeatSendInterval     int32          `protobuf:"varint,5,opt,name=max_repeat_send_interval" json:"max_repeat_send_interval,omitempty"`
	ConsecutiveCount          int32          `protobuf:"varint,6,opt,name=consecutive_count" json:"consecutive_count,omitempty"`
	Period                    int32          `protobuf:"varint,7,opt,name=period" json:"period,omitempty"`
	ConditionType             string         `protobuf:"bytes,8,opt,name=condition_type" json:"condition_type,omitempty"`
	Threshold                 float32        `protobuf:"fixed32,9,opt,name=threshold" json:"threshold,omitempty"`
	Unit                      string         `protobuf:"bytes,10,opt,name=unit" json:"unit,omitempty"`
	PreferSeverity            int32          `protobuf:"varint,11,opt,name=prefer_severity" json:"prefer_severity,omitempty"`
	Enable                    bool           `protobuf:"varint,12,opt,name=enable" json:"enable,omitempty"`
	InhibitRuleEnable         bool           `protobuf:"varint,13,opt,name=inhibit_rule_enable" json:"inhibit_rule_enable,omitempty"`
	MetricId                  string         `protobuf:"bytes,14,opt,name=metric_id" json:"metric_id,omitempty"`
	MetricName                string         `protobuf:"bytes,15,opt,name=metric_name" json:"metric_name,omitempty"`
	RefAlertRuleId            string         `protobuf:"bytes,16,opt,name=ref_alert_rule_id" json:"ref_alert_rule_id,omitempty"`
}

func (m *AlertRule) Reset()                    { *m = AlertRule{} }
func (m *AlertRule) String() string            { return proto.CompactTextString(m) }
func (*AlertRule) ProtoMessage()               {}
func (*AlertRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *AlertRule) GetAlertRuleId() string {
	if m != nil {
		return m.AlertRuleId
	}
	return ""
}

func (m *AlertRule) GetAlertRuleName() string {
	if m != nil {
		return m.AlertRuleName
	}
	return ""
}

func (m *AlertRule) GetRepeatSendType() RepeatSendType {
	if m != nil {
		return m.RepeatSendType
	}
	return RepeatSendType_Fixed
}

func (m *AlertRule) GetInitReapeatSenderInterval() int32 {
	if m != nil {
		return m.InitReapeatSenderInterval
	}
	return 0
}

func (m *AlertRule) GetMaxRepeatSendInterval() int32 {
	if m != nil {
		return m.MaxRepeatSendInterval
	}
	return 0
}

func (m *AlertRule) GetConsecutiveCount() int32 {
	if m != nil {
		return m.ConsecutiveCount
	}
	return 0
}

func (m *AlertRule) GetPeriod() int32 {
	if m != nil {
		return m.Period
	}
	return 0
}

func (m *AlertRule) GetConditionType() string {
	if m != nil {
		return m.ConditionType
	}
	return ""
}

func (m *AlertRule) GetThreshold() float32 {
	if m != nil {
		return m.Threshold
	}
	return 0
}

func (m *AlertRule) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *AlertRule) GetPreferSeverity() int32 {
	if m != nil {
		return m.PreferSeverity
	}
	return 0
}

func (m *AlertRule) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *AlertRule) GetInhibitRuleEnable() bool {
	if m != nil {
		return m.InhibitRuleEnable
	}
	return false
}

func (m *AlertRule) GetMetricId() string {
	if m != nil {
		return m.MetricId
	}
	return ""
}

func (m *AlertRule) GetMetricName() string {
	if m != nil {
		return m.MetricName
	}
	return ""
}

func (m *AlertRule) GetRefAlertRuleId() string {
	if m != nil {
		return m.RefAlertRuleId
	}
	return ""
}

type AlertRuleID struct {
	AlertRuleId string `protobuf:"bytes,1,opt,name=alert_rule_id" json:"alert_rule_id,omitempty"`
}

func (m *AlertRuleID) Reset()                    { *m = AlertRuleID{} }
func (m *AlertRuleID) String() string            { return proto.CompactTextString(m) }
func (*AlertRuleID) ProtoMessage()               {}
func (*AlertRuleID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *AlertRuleID) GetAlertRuleId() string {
	if m != nil {
		return m.AlertRuleId
	}
	return ""
}

type AlertRuleResponse struct {
	AlertRuleId *AlertRuleID `protobuf:"bytes,1,opt,name=alert_rule_id" json:"alert_rule_id,omitempty"`
	AlertRule   *AlertRule   `protobuf:"bytes,2,opt,name=alert_rule" json:"alert_rule,omitempty"`
	Error       *Error       `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *AlertRuleResponse) Reset()                    { *m = AlertRuleResponse{} }
func (m *AlertRuleResponse) String() string            { return proto.CompactTextString(m) }
func (*AlertRuleResponse) ProtoMessage()               {}
func (*AlertRuleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *AlertRuleResponse) GetAlertRuleId() *AlertRuleID {
	if m != nil {
		return m.AlertRuleId
	}
	return nil
}

func (m *AlertRuleResponse) GetAlertRule() *AlertRule {
	if m != nil {
		return m.AlertRule
	}
	return nil
}

func (m *AlertRuleResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// silence
type SilenceID struct {
	AlertConfigId string `protobuf:"bytes,1,opt,name=alert_config_id" json:"alert_config_id,omitempty"`
	AlertRuleId   string `protobuf:"bytes,2,opt,name=alert_rule_id" json:"alert_rule_id,omitempty"`
	ResourceId    string `protobuf:"bytes,3,opt,name=resource_id" json:"resource_id,omitempty"`
}

func (m *SilenceID) Reset()                    { *m = SilenceID{} }
func (m *SilenceID) String() string            { return proto.CompactTextString(m) }
func (*SilenceID) ProtoMessage()               {}
func (*SilenceID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *SilenceID) GetAlertConfigId() string {
	if m != nil {
		return m.AlertConfigId
	}
	return ""
}

func (m *SilenceID) GetAlertRuleId() string {
	if m != nil {
		return m.AlertRuleId
	}
	return ""
}

func (m *SilenceID) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

type Silence struct {
	SilenceId    *SilenceID `protobuf:"bytes,1,opt,name=silence_id" json:"silence_id,omitempty"`
	Dutation     int32      `protobuf:"varint,2,opt,name=dutation" json:"dutation,omitempty"`
	EndTimestamp int64      `protobuf:"varint,3,opt,name=end_timestamp" json:"end_timestamp,omitempty"`
}

func (m *Silence) Reset()                    { *m = Silence{} }
func (m *Silence) String() string            { return proto.CompactTextString(m) }
func (*Silence) ProtoMessage()               {}
func (*Silence) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *Silence) GetSilenceId() *SilenceID {
	if m != nil {
		return m.SilenceId
	}
	return nil
}

func (m *Silence) GetDutation() int32 {
	if m != nil {
		return m.Dutation
	}
	return 0
}

func (m *Silence) GetEndTimestamp() int64 {
	if m != nil {
		return m.EndTimestamp
	}
	return 0
}

type SilenceResponse struct {
	Silence *Silence `protobuf:"bytes,1,opt,name=silence" json:"silence,omitempty"`
	Error   *Error   `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *SilenceResponse) Reset()                    { *m = SilenceResponse{} }
func (m *SilenceResponse) String() string            { return proto.CompactTextString(m) }
func (*SilenceResponse) ProtoMessage()               {}
func (*SilenceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *SilenceResponse) GetSilence() *Silence {
	if m != nil {
		return m.Silence
	}
	return nil
}

func (m *SilenceResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// resource group
type ResourceGroup struct {
	ResourceGroupId   string            `protobuf:"bytes,1,opt,name=resource_group_id" json:"resource_group_id,omitempty"`
	ResourceGroupName string            `protobuf:"bytes,2,opt,name=resource_group_name" json:"resource_group_name,omitempty"`
	ResourceUriTmpls  *ResourceUriTmpls `protobuf:"bytes,3,opt,name=resource_uri_tmpls" json:"resource_uri_tmpls,omitempty"`
	Desc              string            `protobuf:"bytes,4,opt,name=desc" json:"desc,omitempty"`
	Resources         []*Resource       `protobuf:"bytes,5,rep,name=resources" json:"resources,omitempty"`
}

func (m *ResourceGroup) Reset()                    { *m = ResourceGroup{} }
func (m *ResourceGroup) String() string            { return proto.CompactTextString(m) }
func (*ResourceGroup) ProtoMessage()               {}
func (*ResourceGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *ResourceGroup) GetResourceGroupId() string {
	if m != nil {
		return m.ResourceGroupId
	}
	return ""
}

func (m *ResourceGroup) GetResourceGroupName() string {
	if m != nil {
		return m.ResourceGroupName
	}
	return ""
}

func (m *ResourceGroup) GetResourceUriTmpls() *ResourceUriTmpls {
	if m != nil {
		return m.ResourceUriTmpls
	}
	return nil
}

func (m *ResourceGroup) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *ResourceGroup) GetResources() []*Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

type Resource struct {
	ResourceId      string `protobuf:"bytes,1,opt,name=resource_id" json:"resource_id,omitempty"`
	ResourceName    string `protobuf:"bytes,2,opt,name=resource_name" json:"resource_name,omitempty"`
	ResourceGroupId string `protobuf:"bytes,3,opt,name=resource_group_id" json:"resource_group_id,omitempty"`
	ResourceTypeId  string `protobuf:"bytes,4,opt,name=resource_type_id" json:"resource_type_id,omitempty"`
}

func (m *Resource) Reset()                    { *m = Resource{} }
func (m *Resource) String() string            { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()               {}
func (*Resource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *Resource) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *Resource) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func (m *Resource) GetResourceGroupId() string {
	if m != nil {
		return m.ResourceGroupId
	}
	return ""
}

func (m *Resource) GetResourceTypeId() string {
	if m != nil {
		return m.ResourceTypeId
	}
	return ""
}

// receiver group
type ReceiverGroup struct {
	ReceiverGroupId   string      `protobuf:"bytes,1,opt,name=receiver_group_id" json:"receiver_group_id,omitempty"`
	ReceiverGroupName string      `protobuf:"bytes,2,opt,name=receiver_group_name" json:"receiver_group_name,omitempty"`
	Webhook           string      `protobuf:"bytes,3,opt,name=webhook" json:"webhook,omitempty"`
	WebhookEnable     bool        `protobuf:"varint,4,opt,name=webhook_enable" json:"webhook_enable,omitempty"`
	Desc              string      `protobuf:"bytes,5,opt,name=desc" json:"desc,omitempty"`
	Receivers         []*Receiver `protobuf:"bytes,6,rep,name=receivers" json:"receivers,omitempty"`
}

func (m *ReceiverGroup) Reset()                    { *m = ReceiverGroup{} }
func (m *ReceiverGroup) String() string            { return proto.CompactTextString(m) }
func (*ReceiverGroup) ProtoMessage()               {}
func (*ReceiverGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ReceiverGroup) GetReceiverGroupId() string {
	if m != nil {
		return m.ReceiverGroupId
	}
	return ""
}

func (m *ReceiverGroup) GetReceiverGroupName() string {
	if m != nil {
		return m.ReceiverGroupName
	}
	return ""
}

func (m *ReceiverGroup) GetWebhook() string {
	if m != nil {
		return m.Webhook
	}
	return ""
}

func (m *ReceiverGroup) GetWebhookEnable() bool {
	if m != nil {
		return m.WebhookEnable
	}
	return false
}

func (m *ReceiverGroup) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *ReceiverGroup) GetReceivers() []*Receiver {
	if m != nil {
		return m.Receivers
	}
	return nil
}

type Receiver struct {
	ReceiverId   string `protobuf:"bytes,1,opt,name=receiver_id" json:"receiver_id,omitempty"`
	ReceiverName string `protobuf:"bytes,2,opt,name=receiver_name" json:"receiver_name,omitempty"`
	Email        string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Phone        string `protobuf:"bytes,4,opt,name=phone" json:"phone,omitempty"`
	Wechat       string `protobuf:"bytes,5,opt,name=wechat" json:"wechat,omitempty"`
}

func (m *Receiver) Reset()                    { *m = Receiver{} }
func (m *Receiver) String() string            { return proto.CompactTextString(m) }
func (*Receiver) ProtoMessage()               {}
func (*Receiver) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *Receiver) GetReceiverId() string {
	if m != nil {
		return m.ReceiverId
	}
	return ""
}

func (m *Receiver) GetReceiverName() string {
	if m != nil {
		return m.ReceiverName
	}
	return ""
}

func (m *Receiver) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Receiver) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Receiver) GetWechat() string {
	if m != nil {
		return m.Wechat
	}
	return ""
}

// alert rule group
type AlertRuleGroup struct {
	ReceiverGroupId   string `protobuf:"bytes,1,opt,name=receiver_group_id" json:"receiver_group_id,omitempty"`
	ReceiverGroupName string `protobuf:"bytes,2,opt,name=receiver_group_name" json:"receiver_group_name,omitempty"`
	//    Condition condition = 3;
	//    enum Condition {
	//        OR = 0;
	//        AND = 1;
	//        OTHER = 2;
	//    }
	Desc       string       `protobuf:"bytes,3,opt,name=desc" json:"desc,omitempty"`
	AlertRules []*AlertRule `protobuf:"bytes,4,rep,name=alert_rules" json:"alert_rules,omitempty"`
}

func (m *AlertRuleGroup) Reset()                    { *m = AlertRuleGroup{} }
func (m *AlertRuleGroup) String() string            { return proto.CompactTextString(m) }
func (*AlertRuleGroup) ProtoMessage()               {}
func (*AlertRuleGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *AlertRuleGroup) GetReceiverGroupId() string {
	if m != nil {
		return m.ReceiverGroupId
	}
	return ""
}

func (m *AlertRuleGroup) GetReceiverGroupName() string {
	if m != nil {
		return m.ReceiverGroupName
	}
	return ""
}

func (m *AlertRuleGroup) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *AlertRuleGroup) GetAlertRules() []*AlertRule {
	if m != nil {
		return m.AlertRules
	}
	return nil
}

// alert config
type AlertConfig struct {
	AlertConfigId   string                 `protobuf:"bytes,1,opt,name=alert_config_id" json:"alert_config_id,omitempty"`
	AlertConfigName string                 `protobuf:"bytes,2,opt,name=alert_config_name" json:"alert_config_name,omitempty"`
	AlertRuleGroup  *AlertRuleGroup        `protobuf:"bytes,3,opt,name=alert_rule_group" json:"alert_rule_group,omitempty"`
	ResourceGroup   *ResourceGroup         `protobuf:"bytes,4,opt,name=resource_group" json:"resource_group,omitempty"`
	ReceiverGroup   *ReceiverGroup         `protobuf:"bytes,5,opt,name=receiver_group" json:"receiver_group,omitempty"`
	SeverityId      string                 `protobuf:"bytes,6,opt,name=severity_id" json:"severity_id,omitempty"`
	SeverityCh      string                 `protobuf:"bytes,7,opt,name=severity_ch" json:"severity_ch,omitempty"`
	UpdateType      AlertConfig_UpdateType `protobuf:"varint,8,opt,name=update_type,enum=pb.AlertConfig_UpdateType" json:"update_type,omitempty"`
	EnableTime      string                 `protobuf:"bytes,9,opt,name=enable_time" json:"enable_time,omitempty"`
	DisableTime     string                 `protobuf:"bytes,10,opt,name=disable_time" json:"disable_time,omitempty"`
	Enable          bool                   `protobuf:"varint,11,opt,name=enable" json:"enable,omitempty"`
	Desc            string                 `protobuf:"bytes,12,opt,name=desc" json:"desc,omitempty"`
}

func (m *AlertConfig) Reset()                    { *m = AlertConfig{} }
func (m *AlertConfig) String() string            { return proto.CompactTextString(m) }
func (*AlertConfig) ProtoMessage()               {}
func (*AlertConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *AlertConfig) GetAlertConfigId() string {
	if m != nil {
		return m.AlertConfigId
	}
	return ""
}

func (m *AlertConfig) GetAlertConfigName() string {
	if m != nil {
		return m.AlertConfigName
	}
	return ""
}

func (m *AlertConfig) GetAlertRuleGroup() *AlertRuleGroup {
	if m != nil {
		return m.AlertRuleGroup
	}
	return nil
}

func (m *AlertConfig) GetResourceGroup() *ResourceGroup {
	if m != nil {
		return m.ResourceGroup
	}
	return nil
}

func (m *AlertConfig) GetReceiverGroup() *ReceiverGroup {
	if m != nil {
		return m.ReceiverGroup
	}
	return nil
}

func (m *AlertConfig) GetSeverityId() string {
	if m != nil {
		return m.SeverityId
	}
	return ""
}

func (m *AlertConfig) GetSeverityCh() string {
	if m != nil {
		return m.SeverityCh
	}
	return ""
}

func (m *AlertConfig) GetUpdateType() AlertConfig_UpdateType {
	if m != nil {
		return m.UpdateType
	}
	return AlertConfig_RECEIVER
}

func (m *AlertConfig) GetEnableTime() string {
	if m != nil {
		return m.EnableTime
	}
	return ""
}

func (m *AlertConfig) GetDisableTime() string {
	if m != nil {
		return m.DisableTime
	}
	return ""
}

func (m *AlertConfig) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *AlertConfig) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type AlertConfigID struct {
	AlertConfigId string `protobuf:"bytes,1,opt,name=alert_config_id" json:"alert_config_id,omitempty"`
}

func (m *AlertConfigID) Reset()                    { *m = AlertConfigID{} }
func (m *AlertConfigID) String() string            { return proto.CompactTextString(m) }
func (*AlertConfigID) ProtoMessage()               {}
func (*AlertConfigID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *AlertConfigID) GetAlertConfigId() string {
	if m != nil {
		return m.AlertConfigId
	}
	return ""
}

type AlertConfigResponse struct {
	AlertConfigId *AlertConfigID `protobuf:"bytes,1,opt,name=alert_config_id" json:"alert_config_id,omitempty"`
	AlertConfig   *AlertConfig   `protobuf:"bytes,2,opt,name=alert_config" json:"alert_config,omitempty"`
	Error         *Error         `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *AlertConfigResponse) Reset()                    { *m = AlertConfigResponse{} }
func (m *AlertConfigResponse) String() string            { return proto.CompactTextString(m) }
func (*AlertConfigResponse) ProtoMessage()               {}
func (*AlertConfigResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *AlertConfigResponse) GetAlertConfigId() *AlertConfigID {
	if m != nil {
		return m.AlertConfigId
	}
	return nil
}

func (m *AlertConfigResponse) GetAlertConfig() *AlertConfig {
	if m != nil {
		return m.AlertConfig
	}
	return nil
}

func (m *AlertConfigResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// alert history
type AlertHistory struct {
	AlertHistoryId            string         `protobuf:"bytes,1,opt,name=alert_history_id" json:"alert_history_id,omitempty"`
	AlertConfigId             string         `protobuf:"bytes,2,opt,name=alert_config_id" json:"alert_config_id,omitempty"`
	AlertName                 string         `protobuf:"bytes,3,opt,name=alert_name" json:"alert_name,omitempty"`
	SeverityId                string         `protobuf:"bytes,4,opt,name=severity_id" json:"severity_id,omitempty"`
	SeverityCh                string         `protobuf:"bytes,5,opt,name=severity_ch" json:"severity_ch,omitempty"`
	ResourceGroupId           string         `protobuf:"bytes,6,opt,name=resource_group_id" json:"resource_group_id,omitempty"`
	ResourceGroupName         string         `protobuf:"bytes,7,opt,name=resource_group_name" json:"resource_group_name,omitempty"`
	ResourceTypeId            string         `protobuf:"bytes,8,opt,name=resource_type_id" json:"resource_type_id,omitempty"`
	ResourceType              string         `protobuf:"bytes,9,opt,name=resource_type" json:"resource_type,omitempty"`
	AlertedResource           string         `protobuf:"bytes,10,opt,name=alerted_resource" json:"alerted_resource,omitempty"`
	ReceiverGroupId           string         `protobuf:"bytes,11,opt,name=receiver_group_id" json:"receiver_group_id,omitempty"`
	ReceiverGroupName         string         `protobuf:"bytes,12,opt,name=receiver_group_name" json:"receiver_group_name,omitempty"`
	Receivers                 []*Receiver    `protobuf:"bytes,13,rep,name=receivers" json:"receivers,omitempty"`
	AlertRuleGroupId          string         `protobuf:"bytes,14,opt,name=alert_rule_group_id" json:"alert_rule_group_id,omitempty"`
	TriggerAlertRule          string         `protobuf:"bytes,15,opt,name=trigger_alert_rule" json:"trigger_alert_rule,omitempty"`
	AlertRules                []*AlertRule   `protobuf:"bytes,16,rep,name=alert_rules" json:"alert_rules,omitempty"`
	RepeatType                RepeatSendType `protobuf:"varint,17,opt,name=repeat_type,enum=pb.RepeatSendType" json:"repeat_type,omitempty"`
	CurrentRepeatInterval     string         `protobuf:"bytes,18,opt,name=current_repeat_interval" json:"current_repeat_interval,omitempty"`
	NextRepeatInterval        string         `protobuf:"bytes,19,opt,name=next_repeat_interval" json:"next_repeat_interval,omitempty"`
	InitRepeatInterval        string         `protobuf:"bytes,20,opt,name=init_repeat_interval" json:"init_repeat_interval,omitempty"`
	MaxRepeatInterval         string         `protobuf:"bytes,21,opt,name=max_repeat_interval" json:"max_repeat_interval,omitempty"`
	RequestNotificationStatus string         `protobuf:"bytes,22,opt,name=request_notification_status" json:"request_notification_status,omitempty"`
	EventTime                 string         `protobuf:"bytes,23,opt,name=event_time" json:"event_time,omitempty"`
}

func (m *AlertHistory) Reset()                    { *m = AlertHistory{} }
func (m *AlertHistory) String() string            { return proto.CompactTextString(m) }
func (*AlertHistory) ProtoMessage()               {}
func (*AlertHistory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *AlertHistory) GetAlertHistoryId() string {
	if m != nil {
		return m.AlertHistoryId
	}
	return ""
}

func (m *AlertHistory) GetAlertConfigId() string {
	if m != nil {
		return m.AlertConfigId
	}
	return ""
}

func (m *AlertHistory) GetAlertName() string {
	if m != nil {
		return m.AlertName
	}
	return ""
}

func (m *AlertHistory) GetSeverityId() string {
	if m != nil {
		return m.SeverityId
	}
	return ""
}

func (m *AlertHistory) GetSeverityCh() string {
	if m != nil {
		return m.SeverityCh
	}
	return ""
}

func (m *AlertHistory) GetResourceGroupId() string {
	if m != nil {
		return m.ResourceGroupId
	}
	return ""
}

func (m *AlertHistory) GetResourceGroupName() string {
	if m != nil {
		return m.ResourceGroupName
	}
	return ""
}

func (m *AlertHistory) GetResourceTypeId() string {
	if m != nil {
		return m.ResourceTypeId
	}
	return ""
}

func (m *AlertHistory) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *AlertHistory) GetAlertedResource() string {
	if m != nil {
		return m.AlertedResource
	}
	return ""
}

func (m *AlertHistory) GetReceiverGroupId() string {
	if m != nil {
		return m.ReceiverGroupId
	}
	return ""
}

func (m *AlertHistory) GetReceiverGroupName() string {
	if m != nil {
		return m.ReceiverGroupName
	}
	return ""
}

func (m *AlertHistory) GetReceivers() []*Receiver {
	if m != nil {
		return m.Receivers
	}
	return nil
}

func (m *AlertHistory) GetAlertRuleGroupId() string {
	if m != nil {
		return m.AlertRuleGroupId
	}
	return ""
}

func (m *AlertHistory) GetTriggerAlertRule() string {
	if m != nil {
		return m.TriggerAlertRule
	}
	return ""
}

func (m *AlertHistory) GetAlertRules() []*AlertRule {
	if m != nil {
		return m.AlertRules
	}
	return nil
}

func (m *AlertHistory) GetRepeatType() RepeatSendType {
	if m != nil {
		return m.RepeatType
	}
	return RepeatSendType_Fixed
}

func (m *AlertHistory) GetCurrentRepeatInterval() string {
	if m != nil {
		return m.CurrentRepeatInterval
	}
	return ""
}

func (m *AlertHistory) GetNextRepeatInterval() string {
	if m != nil {
		return m.NextRepeatInterval
	}
	return ""
}

func (m *AlertHistory) GetInitRepeatInterval() string {
	if m != nil {
		return m.InitRepeatInterval
	}
	return ""
}

func (m *AlertHistory) GetMaxRepeatInterval() string {
	if m != nil {
		return m.MaxRepeatInterval
	}
	return ""
}

func (m *AlertHistory) GetRequestNotificationStatus() string {
	if m != nil {
		return m.RequestNotificationStatus
	}
	return ""
}

func (m *AlertHistory) GetEventTime() string {
	if m != nil {
		return m.EventTime
	}
	return ""
}

type AlertHistoryRequest struct {
	AlertHistoryId string `protobuf:"bytes,1,opt,name=alert_history_id" json:"alert_history_id,omitempty"`
	AlertConfigId  string `protobuf:"bytes,2,opt,name=alert_config_id" json:"alert_config_id,omitempty"`
	AlertRuleId    string `protobuf:"bytes,3,opt,name=alert_rule_id" json:"alert_rule_id,omitempty"`
	ResourceId     string `protobuf:"bytes,4,opt,name=resource_id" json:"resource_id,omitempty"`
	Product        string `protobuf:"bytes,5,opt,name=product" json:"product,omitempty"`
	Page           int32  `protobuf:"varint,6,opt,name=page" json:"page,omitempty"`
	Limit          int32  `protobuf:"varint,7,opt,name=limit" json:"limit,omitempty"`
	Field          string `protobuf:"bytes,8,opt,name=field" json:"field,omitempty"`
	Fuzz           string `protobuf:"bytes,9,opt,name=fuzz" json:"fuzz,omitempty"`
	StartTime      int64  `protobuf:"varint,10,opt,name=start_time" json:"start_time,omitempty"`
	EndTime        int64  `protobuf:"varint,11,opt,name=end_time" json:"end_time,omitempty"`
}

func (m *AlertHistoryRequest) Reset()                    { *m = AlertHistoryRequest{} }
func (m *AlertHistoryRequest) String() string            { return proto.CompactTextString(m) }
func (*AlertHistoryRequest) ProtoMessage()               {}
func (*AlertHistoryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *AlertHistoryRequest) GetAlertHistoryId() string {
	if m != nil {
		return m.AlertHistoryId
	}
	return ""
}

func (m *AlertHistoryRequest) GetAlertConfigId() string {
	if m != nil {
		return m.AlertConfigId
	}
	return ""
}

func (m *AlertHistoryRequest) GetAlertRuleId() string {
	if m != nil {
		return m.AlertRuleId
	}
	return ""
}

func (m *AlertHistoryRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *AlertHistoryRequest) GetProduct() string {
	if m != nil {
		return m.Product
	}
	return ""
}

func (m *AlertHistoryRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *AlertHistoryRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AlertHistoryRequest) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *AlertHistoryRequest) GetFuzz() string {
	if m != nil {
		return m.Fuzz
	}
	return ""
}

func (m *AlertHistoryRequest) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *AlertHistoryRequest) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

type AlertHistoryResponse struct {
	AlertHistory []*AlertHistory `protobuf:"bytes,1,rep,name=alert_history" json:"alert_history,omitempty"`
	Error        []*Error        `protobuf:"bytes,2,rep,name=error" json:"error,omitempty"`
}

func (m *AlertHistoryResponse) Reset()                    { *m = AlertHistoryResponse{} }
func (m *AlertHistoryResponse) String() string            { return proto.CompactTextString(m) }
func (*AlertHistoryResponse) ProtoMessage()               {}
func (*AlertHistoryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *AlertHistoryResponse) GetAlertHistory() []*AlertHistory {
	if m != nil {
		return m.AlertHistory
	}
	return nil
}

func (m *AlertHistoryResponse) GetError() []*Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// suggestion
type Suggestion struct {
	SuggestionId *SuggestionID `protobuf:"bytes,1,opt,name=suggestion_id" json:"suggestion_id,omitempty"`
	Suggestion   string        `protobuf:"bytes,2,opt,name=suggestion" json:"suggestion,omitempty"`
}

func (m *Suggestion) Reset()                    { *m = Suggestion{} }
func (m *Suggestion) String() string            { return proto.CompactTextString(m) }
func (*Suggestion) ProtoMessage()               {}
func (*Suggestion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *Suggestion) GetSuggestionId() *SuggestionID {
	if m != nil {
		return m.SuggestionId
	}
	return nil
}

func (m *Suggestion) GetSuggestion() string {
	if m != nil {
		return m.Suggestion
	}
	return ""
}

type SuggestionID struct {
	AlertConfigId string `protobuf:"bytes,1,opt,name=alert_config_id" json:"alert_config_id,omitempty"`
	ResourceId    string `protobuf:"bytes,2,opt,name=resource_id" json:"resource_id,omitempty"`
	AlertRuleId   string `protobuf:"bytes,3,opt,name=alert_rule_id" json:"alert_rule_id,omitempty"`
}

func (m *SuggestionID) Reset()                    { *m = SuggestionID{} }
func (m *SuggestionID) String() string            { return proto.CompactTextString(m) }
func (*SuggestionID) ProtoMessage()               {}
func (*SuggestionID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *SuggestionID) GetAlertConfigId() string {
	if m != nil {
		return m.AlertConfigId
	}
	return ""
}

func (m *SuggestionID) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *SuggestionID) GetAlertRuleId() string {
	if m != nil {
		return m.AlertRuleId
	}
	return ""
}

type SuggestionResponse struct {
	Suggestion *Suggestion `protobuf:"bytes,2,opt,name=suggestion" json:"suggestion,omitempty"`
	Error      *Error      `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *SuggestionResponse) Reset()                    { *m = SuggestionResponse{} }
func (m *SuggestionResponse) String() string            { return proto.CompactTextString(m) }
func (*SuggestionResponse) ProtoMessage()               {}
func (*SuggestionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *SuggestionResponse) GetSuggestion() *Suggestion {
	if m != nil {
		return m.Suggestion
	}
	return nil
}

func (m *SuggestionResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*Error)(nil), "pb.Error")
	proto.RegisterType((*Enterprise)(nil), "pb.Enterprise")
	proto.RegisterType((*GetEnterpriseResponse)(nil), "pb.GetEnterpriseResponse")
	proto.RegisterType((*EnterpriseID)(nil), "pb.EnterpriseID")
	proto.RegisterType((*EnterpriseResponse)(nil), "pb.EnterpriseResponse")
	proto.RegisterType((*Product)(nil), "pb.Product")
	proto.RegisterType((*ProductID)(nil), "pb.ProductID")
	proto.RegisterType((*ProductResponse)(nil), "pb.ProductResponse")
	proto.RegisterType((*ResourceUriTmpls)(nil), "pb.ResourceUriTmpls")
	proto.RegisterType((*ResourceType)(nil), "pb.ResourceType")
	proto.RegisterType((*ResourceTypeID)(nil), "pb.ResourceTypeID")
	proto.RegisterType((*ResourceTypeResponse)(nil), "pb.ResourceTypeResponse")
	proto.RegisterType((*AlertRule)(nil), "pb.AlertRule")
	proto.RegisterType((*AlertRuleID)(nil), "pb.AlertRuleID")
	proto.RegisterType((*AlertRuleResponse)(nil), "pb.AlertRuleResponse")
	proto.RegisterType((*SilenceID)(nil), "pb.SilenceID")
	proto.RegisterType((*Silence)(nil), "pb.Silence")
	proto.RegisterType((*SilenceResponse)(nil), "pb.SilenceResponse")
	proto.RegisterType((*ResourceGroup)(nil), "pb.ResourceGroup")
	proto.RegisterType((*Resource)(nil), "pb.Resource")
	proto.RegisterType((*ReceiverGroup)(nil), "pb.ReceiverGroup")
	proto.RegisterType((*Receiver)(nil), "pb.Receiver")
	proto.RegisterType((*AlertRuleGroup)(nil), "pb.AlertRuleGroup")
	proto.RegisterType((*AlertConfig)(nil), "pb.AlertConfig")
	proto.RegisterType((*AlertConfigID)(nil), "pb.AlertConfigID")
	proto.RegisterType((*AlertConfigResponse)(nil), "pb.AlertConfigResponse")
	proto.RegisterType((*AlertHistory)(nil), "pb.AlertHistory")
	proto.RegisterType((*AlertHistoryRequest)(nil), "pb.AlertHistoryRequest")
	proto.RegisterType((*AlertHistoryResponse)(nil), "pb.AlertHistoryResponse")
	proto.RegisterType((*Suggestion)(nil), "pb.Suggestion")
	proto.RegisterType((*SuggestionID)(nil), "pb.SuggestionID")
	proto.RegisterType((*SuggestionResponse)(nil), "pb.SuggestionResponse")
	proto.RegisterEnum("pb.RepeatSendType", RepeatSendType_name, RepeatSendType_value)
	proto.RegisterEnum("pb.Error_ErrorCode", Error_ErrorCode_name, Error_ErrorCode_value)
	proto.RegisterEnum("pb.AlertConfig_UpdateType", AlertConfig_UpdateType_name, AlertConfig_UpdateType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AlertEngine service

type AlertEngineClient interface {
	// enterprise
	CreateEnterprise(ctx context.Context, in *Enterprise, opts ...grpc.CallOption) (*EnterpriseResponse, error)
	DeleteEnterprise(ctx context.Context, in *EnterpriseID, opts ...grpc.CallOption) (*EnterpriseResponse, error)
	UpdateEnterprise(ctx context.Context, in *Enterprise, opts ...grpc.CallOption) (*EnterpriseResponse, error)
	GetEnterprise(ctx context.Context, in *EnterpriseID, opts ...grpc.CallOption) (*GetEnterpriseResponse, error)
	// product
	CreateProduct(ctx context.Context, in *Product, opts ...grpc.CallOption) (*ProductResponse, error)
	DeleteProduct(ctx context.Context, in *ProductID, opts ...grpc.CallOption) (*ProductResponse, error)
	UpdateProduct(ctx context.Context, in *Product, opts ...grpc.CallOption) (*ProductResponse, error)
	GetProduct(ctx context.Context, in *ProductID, opts ...grpc.CallOption) (*ProductResponse, error)
	// resource type
	CreateResourceType(ctx context.Context, in *ResourceType, opts ...grpc.CallOption) (*ResourceTypeResponse, error)
	DeleteResourceType(ctx context.Context, in *ResourceTypeID, opts ...grpc.CallOption) (*ResourceTypeResponse, error)
	UpdateResourceType(ctx context.Context, in *ResourceType, opts ...grpc.CallOption) (*ResourceTypeResponse, error)
	GetResourceType(ctx context.Context, in *ResourceTypeID, opts ...grpc.CallOption) (*ResourceTypeResponse, error)
	// alert rule
	CreateAlertRule(ctx context.Context, in *AlertRule, opts ...grpc.CallOption) (*AlertRuleResponse, error)
	DeleteAlertRule(ctx context.Context, in *AlertRuleID, opts ...grpc.CallOption) (*AlertRuleResponse, error)
	UpdateAlertRule(ctx context.Context, in *AlertRule, opts ...grpc.CallOption) (*AlertRuleResponse, error)
	GetAlertRule(ctx context.Context, in *AlertRuleID, opts ...grpc.CallOption) (*AlertRuleResponse, error)
	// silence
	CreateSilence(ctx context.Context, in *Silence, opts ...grpc.CallOption) (*SilenceResponse, error)
	DeleteSilence(ctx context.Context, in *Silence, opts ...grpc.CallOption) (*SilenceResponse, error)
	UpdateSilence(ctx context.Context, in *Silence, opts ...grpc.CallOption) (*SilenceResponse, error)
	GetSilence(ctx context.Context, in *Silence, opts ...grpc.CallOption) (*SilenceResponse, error)
	// alert
	CreateAlertConfig(ctx context.Context, in *AlertConfig, opts ...grpc.CallOption) (*AlertConfigResponse, error)
	DeleteAlertConfig(ctx context.Context, in *AlertConfig, opts ...grpc.CallOption) (*AlertConfigResponse, error)
	UpdateAlertConfig(ctx context.Context, in *AlertConfig, opts ...grpc.CallOption) (*AlertConfigResponse, error)
	GetAlertConfig(ctx context.Context, in *AlertConfig, opts ...grpc.CallOption) (*AlertConfigResponse, error)
	// history
	GetAlertHistory(ctx context.Context, in *AlertHistoryRequest, opts ...grpc.CallOption) (*AlertHistoryResponse, error)
	// suggestion
	CreateSuggestion(ctx context.Context, in *Suggestion, opts ...grpc.CallOption) (*SuggestionResponse, error)
	DeleteSuggestion(ctx context.Context, in *Suggestion, opts ...grpc.CallOption) (*SuggestionResponse, error)
	UpdateSuggestion(ctx context.Context, in *Suggestion, opts ...grpc.CallOption) (*SuggestionResponse, error)
	GetSuggestion(ctx context.Context, in *Suggestion, opts ...grpc.CallOption) (*SuggestionResponse, error)
	// resource
	GetResource(ctx context.Context, in *Resource, opts ...grpc.CallOption) (*Resource, error)
}

type alertEngineClient struct {
	cc *grpc.ClientConn
}

func NewAlertEngineClient(cc *grpc.ClientConn) AlertEngineClient {
	return &alertEngineClient{cc}
}

func (c *alertEngineClient) CreateEnterprise(ctx context.Context, in *Enterprise, opts ...grpc.CallOption) (*EnterpriseResponse, error) {
	out := new(EnterpriseResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/CreateEnterprise", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) DeleteEnterprise(ctx context.Context, in *EnterpriseID, opts ...grpc.CallOption) (*EnterpriseResponse, error) {
	out := new(EnterpriseResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/DeleteEnterprise", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) UpdateEnterprise(ctx context.Context, in *Enterprise, opts ...grpc.CallOption) (*EnterpriseResponse, error) {
	out := new(EnterpriseResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/UpdateEnterprise", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) GetEnterprise(ctx context.Context, in *EnterpriseID, opts ...grpc.CallOption) (*GetEnterpriseResponse, error) {
	out := new(GetEnterpriseResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/GetEnterprise", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) CreateProduct(ctx context.Context, in *Product, opts ...grpc.CallOption) (*ProductResponse, error) {
	out := new(ProductResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/CreateProduct", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) DeleteProduct(ctx context.Context, in *ProductID, opts ...grpc.CallOption) (*ProductResponse, error) {
	out := new(ProductResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/DeleteProduct", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) UpdateProduct(ctx context.Context, in *Product, opts ...grpc.CallOption) (*ProductResponse, error) {
	out := new(ProductResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/UpdateProduct", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) GetProduct(ctx context.Context, in *ProductID, opts ...grpc.CallOption) (*ProductResponse, error) {
	out := new(ProductResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/GetProduct", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) CreateResourceType(ctx context.Context, in *ResourceType, opts ...grpc.CallOption) (*ResourceTypeResponse, error) {
	out := new(ResourceTypeResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/CreateResourceType", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) DeleteResourceType(ctx context.Context, in *ResourceTypeID, opts ...grpc.CallOption) (*ResourceTypeResponse, error) {
	out := new(ResourceTypeResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/DeleteResourceType", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) UpdateResourceType(ctx context.Context, in *ResourceType, opts ...grpc.CallOption) (*ResourceTypeResponse, error) {
	out := new(ResourceTypeResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/UpdateResourceType", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) GetResourceType(ctx context.Context, in *ResourceTypeID, opts ...grpc.CallOption) (*ResourceTypeResponse, error) {
	out := new(ResourceTypeResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/GetResourceType", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) CreateAlertRule(ctx context.Context, in *AlertRule, opts ...grpc.CallOption) (*AlertRuleResponse, error) {
	out := new(AlertRuleResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/CreateAlertRule", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) DeleteAlertRule(ctx context.Context, in *AlertRuleID, opts ...grpc.CallOption) (*AlertRuleResponse, error) {
	out := new(AlertRuleResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/DeleteAlertRule", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) UpdateAlertRule(ctx context.Context, in *AlertRule, opts ...grpc.CallOption) (*AlertRuleResponse, error) {
	out := new(AlertRuleResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/UpdateAlertRule", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) GetAlertRule(ctx context.Context, in *AlertRuleID, opts ...grpc.CallOption) (*AlertRuleResponse, error) {
	out := new(AlertRuleResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/GetAlertRule", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) CreateSilence(ctx context.Context, in *Silence, opts ...grpc.CallOption) (*SilenceResponse, error) {
	out := new(SilenceResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/CreateSilence", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) DeleteSilence(ctx context.Context, in *Silence, opts ...grpc.CallOption) (*SilenceResponse, error) {
	out := new(SilenceResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/DeleteSilence", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) UpdateSilence(ctx context.Context, in *Silence, opts ...grpc.CallOption) (*SilenceResponse, error) {
	out := new(SilenceResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/UpdateSilence", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) GetSilence(ctx context.Context, in *Silence, opts ...grpc.CallOption) (*SilenceResponse, error) {
	out := new(SilenceResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/GetSilence", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) CreateAlertConfig(ctx context.Context, in *AlertConfig, opts ...grpc.CallOption) (*AlertConfigResponse, error) {
	out := new(AlertConfigResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/CreateAlertConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) DeleteAlertConfig(ctx context.Context, in *AlertConfig, opts ...grpc.CallOption) (*AlertConfigResponse, error) {
	out := new(AlertConfigResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/DeleteAlertConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) UpdateAlertConfig(ctx context.Context, in *AlertConfig, opts ...grpc.CallOption) (*AlertConfigResponse, error) {
	out := new(AlertConfigResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/UpdateAlertConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) GetAlertConfig(ctx context.Context, in *AlertConfig, opts ...grpc.CallOption) (*AlertConfigResponse, error) {
	out := new(AlertConfigResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/GetAlertConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) GetAlertHistory(ctx context.Context, in *AlertHistoryRequest, opts ...grpc.CallOption) (*AlertHistoryResponse, error) {
	out := new(AlertHistoryResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/GetAlertHistory", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) CreateSuggestion(ctx context.Context, in *Suggestion, opts ...grpc.CallOption) (*SuggestionResponse, error) {
	out := new(SuggestionResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/CreateSuggestion", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) DeleteSuggestion(ctx context.Context, in *Suggestion, opts ...grpc.CallOption) (*SuggestionResponse, error) {
	out := new(SuggestionResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/DeleteSuggestion", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) UpdateSuggestion(ctx context.Context, in *Suggestion, opts ...grpc.CallOption) (*SuggestionResponse, error) {
	out := new(SuggestionResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/UpdateSuggestion", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) GetSuggestion(ctx context.Context, in *Suggestion, opts ...grpc.CallOption) (*SuggestionResponse, error) {
	out := new(SuggestionResponse)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/GetSuggestion", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertEngineClient) GetResource(ctx context.Context, in *Resource, opts ...grpc.CallOption) (*Resource, error) {
	out := new(Resource)
	err := grpc.Invoke(ctx, "/pb.AlertEngine/GetResource", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AlertEngine service

type AlertEngineServer interface {
	// enterprise
	CreateEnterprise(context.Context, *Enterprise) (*EnterpriseResponse, error)
	DeleteEnterprise(context.Context, *EnterpriseID) (*EnterpriseResponse, error)
	UpdateEnterprise(context.Context, *Enterprise) (*EnterpriseResponse, error)
	GetEnterprise(context.Context, *EnterpriseID) (*GetEnterpriseResponse, error)
	// product
	CreateProduct(context.Context, *Product) (*ProductResponse, error)
	DeleteProduct(context.Context, *ProductID) (*ProductResponse, error)
	UpdateProduct(context.Context, *Product) (*ProductResponse, error)
	GetProduct(context.Context, *ProductID) (*ProductResponse, error)
	// resource type
	CreateResourceType(context.Context, *ResourceType) (*ResourceTypeResponse, error)
	DeleteResourceType(context.Context, *ResourceTypeID) (*ResourceTypeResponse, error)
	UpdateResourceType(context.Context, *ResourceType) (*ResourceTypeResponse, error)
	GetResourceType(context.Context, *ResourceTypeID) (*ResourceTypeResponse, error)
	// alert rule
	CreateAlertRule(context.Context, *AlertRule) (*AlertRuleResponse, error)
	DeleteAlertRule(context.Context, *AlertRuleID) (*AlertRuleResponse, error)
	UpdateAlertRule(context.Context, *AlertRule) (*AlertRuleResponse, error)
	GetAlertRule(context.Context, *AlertRuleID) (*AlertRuleResponse, error)
	// silence
	CreateSilence(context.Context, *Silence) (*SilenceResponse, error)
	DeleteSilence(context.Context, *Silence) (*SilenceResponse, error)
	UpdateSilence(context.Context, *Silence) (*SilenceResponse, error)
	GetSilence(context.Context, *Silence) (*SilenceResponse, error)
	// alert
	CreateAlertConfig(context.Context, *AlertConfig) (*AlertConfigResponse, error)
	DeleteAlertConfig(context.Context, *AlertConfig) (*AlertConfigResponse, error)
	UpdateAlertConfig(context.Context, *AlertConfig) (*AlertConfigResponse, error)
	GetAlertConfig(context.Context, *AlertConfig) (*AlertConfigResponse, error)
	// history
	GetAlertHistory(context.Context, *AlertHistoryRequest) (*AlertHistoryResponse, error)
	// suggestion
	CreateSuggestion(context.Context, *Suggestion) (*SuggestionResponse, error)
	DeleteSuggestion(context.Context, *Suggestion) (*SuggestionResponse, error)
	UpdateSuggestion(context.Context, *Suggestion) (*SuggestionResponse, error)
	GetSuggestion(context.Context, *Suggestion) (*SuggestionResponse, error)
	// resource
	GetResource(context.Context, *Resource) (*Resource, error)
}

func RegisterAlertEngineServer(s *grpc.Server, srv AlertEngineServer) {
	s.RegisterService(&_AlertEngine_serviceDesc, srv)
}

func _AlertEngine_CreateEnterprise_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Enterprise)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).CreateEnterprise(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/CreateEnterprise",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).CreateEnterprise(ctx, req.(*Enterprise))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_DeleteEnterprise_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnterpriseID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).DeleteEnterprise(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/DeleteEnterprise",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).DeleteEnterprise(ctx, req.(*EnterpriseID))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_UpdateEnterprise_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Enterprise)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).UpdateEnterprise(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/UpdateEnterprise",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).UpdateEnterprise(ctx, req.(*Enterprise))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_GetEnterprise_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnterpriseID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).GetEnterprise(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/GetEnterprise",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).GetEnterprise(ctx, req.(*EnterpriseID))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_CreateProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Product)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).CreateProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/CreateProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).CreateProduct(ctx, req.(*Product))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_DeleteProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).DeleteProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/DeleteProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).DeleteProduct(ctx, req.(*ProductID))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_UpdateProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Product)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).UpdateProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/UpdateProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).UpdateProduct(ctx, req.(*Product))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_GetProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).GetProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/GetProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).GetProduct(ctx, req.(*ProductID))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_CreateResourceType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).CreateResourceType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/CreateResourceType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).CreateResourceType(ctx, req.(*ResourceType))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_DeleteResourceType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceTypeID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).DeleteResourceType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/DeleteResourceType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).DeleteResourceType(ctx, req.(*ResourceTypeID))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_UpdateResourceType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).UpdateResourceType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/UpdateResourceType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).UpdateResourceType(ctx, req.(*ResourceType))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_GetResourceType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceTypeID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).GetResourceType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/GetResourceType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).GetResourceType(ctx, req.(*ResourceTypeID))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_CreateAlertRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertRule)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).CreateAlertRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/CreateAlertRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).CreateAlertRule(ctx, req.(*AlertRule))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_DeleteAlertRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertRuleID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).DeleteAlertRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/DeleteAlertRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).DeleteAlertRule(ctx, req.(*AlertRuleID))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_UpdateAlertRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertRule)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).UpdateAlertRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/UpdateAlertRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).UpdateAlertRule(ctx, req.(*AlertRule))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_GetAlertRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertRuleID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).GetAlertRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/GetAlertRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).GetAlertRule(ctx, req.(*AlertRuleID))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_CreateSilence_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Silence)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).CreateSilence(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/CreateSilence",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).CreateSilence(ctx, req.(*Silence))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_DeleteSilence_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Silence)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).DeleteSilence(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/DeleteSilence",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).DeleteSilence(ctx, req.(*Silence))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_UpdateSilence_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Silence)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).UpdateSilence(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/UpdateSilence",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).UpdateSilence(ctx, req.(*Silence))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_GetSilence_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Silence)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).GetSilence(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/GetSilence",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).GetSilence(ctx, req.(*Silence))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_CreateAlertConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).CreateAlertConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/CreateAlertConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).CreateAlertConfig(ctx, req.(*AlertConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_DeleteAlertConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).DeleteAlertConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/DeleteAlertConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).DeleteAlertConfig(ctx, req.(*AlertConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_UpdateAlertConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).UpdateAlertConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/UpdateAlertConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).UpdateAlertConfig(ctx, req.(*AlertConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_GetAlertConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).GetAlertConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/GetAlertConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).GetAlertConfig(ctx, req.(*AlertConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_GetAlertHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).GetAlertHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/GetAlertHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).GetAlertHistory(ctx, req.(*AlertHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_CreateSuggestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Suggestion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).CreateSuggestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/CreateSuggestion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).CreateSuggestion(ctx, req.(*Suggestion))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_DeleteSuggestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Suggestion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).DeleteSuggestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/DeleteSuggestion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).DeleteSuggestion(ctx, req.(*Suggestion))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_UpdateSuggestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Suggestion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).UpdateSuggestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/UpdateSuggestion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).UpdateSuggestion(ctx, req.(*Suggestion))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_GetSuggestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Suggestion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).GetSuggestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/GetSuggestion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).GetSuggestion(ctx, req.(*Suggestion))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertEngine_GetResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Resource)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertEngineServer).GetResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertEngine/GetResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertEngineServer).GetResource(ctx, req.(*Resource))
	}
	return interceptor(ctx, in, info, handler)
}

var _AlertEngine_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.AlertEngine",
	HandlerType: (*AlertEngineServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEnterprise",
			Handler:    _AlertEngine_CreateEnterprise_Handler,
		},
		{
			MethodName: "DeleteEnterprise",
			Handler:    _AlertEngine_DeleteEnterprise_Handler,
		},
		{
			MethodName: "UpdateEnterprise",
			Handler:    _AlertEngine_UpdateEnterprise_Handler,
		},
		{
			MethodName: "GetEnterprise",
			Handler:    _AlertEngine_GetEnterprise_Handler,
		},
		{
			MethodName: "CreateProduct",
			Handler:    _AlertEngine_CreateProduct_Handler,
		},
		{
			MethodName: "DeleteProduct",
			Handler:    _AlertEngine_DeleteProduct_Handler,
		},
		{
			MethodName: "UpdateProduct",
			Handler:    _AlertEngine_UpdateProduct_Handler,
		},
		{
			MethodName: "GetProduct",
			Handler:    _AlertEngine_GetProduct_Handler,
		},
		{
			MethodName: "CreateResourceType",
			Handler:    _AlertEngine_CreateResourceType_Handler,
		},
		{
			MethodName: "DeleteResourceType",
			Handler:    _AlertEngine_DeleteResourceType_Handler,
		},
		{
			MethodName: "UpdateResourceType",
			Handler:    _AlertEngine_UpdateResourceType_Handler,
		},
		{
			MethodName: "GetResourceType",
			Handler:    _AlertEngine_GetResourceType_Handler,
		},
		{
			MethodName: "CreateAlertRule",
			Handler:    _AlertEngine_CreateAlertRule_Handler,
		},
		{
			MethodName: "DeleteAlertRule",
			Handler:    _AlertEngine_DeleteAlertRule_Handler,
		},
		{
			MethodName: "UpdateAlertRule",
			Handler:    _AlertEngine_UpdateAlertRule_Handler,
		},
		{
			MethodName: "GetAlertRule",
			Handler:    _AlertEngine_GetAlertRule_Handler,
		},
		{
			MethodName: "CreateSilence",
			Handler:    _AlertEngine_CreateSilence_Handler,
		},
		{
			MethodName: "DeleteSilence",
			Handler:    _AlertEngine_DeleteSilence_Handler,
		},
		{
			MethodName: "UpdateSilence",
			Handler:    _AlertEngine_UpdateSilence_Handler,
		},
		{
			MethodName: "GetSilence",
			Handler:    _AlertEngine_GetSilence_Handler,
		},
		{
			MethodName: "CreateAlertConfig",
			Handler:    _AlertEngine_CreateAlertConfig_Handler,
		},
		{
			MethodName: "DeleteAlertConfig",
			Handler:    _AlertEngine_DeleteAlertConfig_Handler,
		},
		{
			MethodName: "UpdateAlertConfig",
			Handler:    _AlertEngine_UpdateAlertConfig_Handler,
		},
		{
			MethodName: "GetAlertConfig",
			Handler:    _AlertEngine_GetAlertConfig_Handler,
		},
		{
			MethodName: "GetAlertHistory",
			Handler:    _AlertEngine_GetAlertHistory_Handler,
		},
		{
			MethodName: "CreateSuggestion",
			Handler:    _AlertEngine_CreateSuggestion_Handler,
		},
		{
			MethodName: "DeleteSuggestion",
			Handler:    _AlertEngine_DeleteSuggestion_Handler,
		},
		{
			MethodName: "UpdateSuggestion",
			Handler:    _AlertEngine_UpdateSuggestion_Handler,
		},
		{
			MethodName: "GetSuggestion",
			Handler:    _AlertEngine_GetSuggestion_Handler,
		},
		{
			MethodName: "GetResource",
			Handler:    _AlertEngine_GetResource_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "alert.proto",
}

func init() { proto.RegisterFile("alert.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2103 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x59, 0xcf, 0x6f, 0xdb, 0xc8,
	0xf5, 0xb7, 0x4c, 0x51, 0x96, 0x1e, 0xf5, 0x83, 0xa2, 0xec, 0x58, 0x51, 0x02, 0xc4, 0xe1, 0x77,
	0xf7, 0x1b, 0x37, 0xdd, 0x66, 0x03, 0x05, 0x05, 0x36, 0x6d, 0xd0, 0xc2, 0x91, 0x18, 0x47, 0x80,
	0x37, 0x6b, 0x48, 0x76, 0x80, 0xed, 0x85, 0xa0, 0xc9, 0xb1, 0x45, 0x44, 0x22, 0x59, 0x72, 0xe4,
	0xb5, 0x73, 0xec, 0xa5, 0xc7, 0x5e, 0x7a, 0xe8, 0xa1, 0xd8, 0x5e, 0xfb, 0x2f, 0xf5, 0xd8, 0x43,
	0xfb, 0x77, 0x14, 0xf3, 0x83, 0xe4, 0x0c, 0xf5, 0x03, 0xb0, 0x73, 0x31, 0xc4, 0x99, 0x79, 0x6f,
	0xde, 0xfb, 0xbc, 0xcf, 0x7b, 0xf3, 0x66, 0x0c, 0x9a, 0x33, 0x43, 0x31, 0x7e, 0x11, 0xc5, 0x21,
	0x0e, 0x8d, 0xed, 0xe8, 0xc2, 0xfc, 0x4b, 0x09, 0x54, 0x2b, 0x8e, 0xc3, 0xd8, 0x78, 0x0a, 0x65,
	0x37, 0xf4, 0x50, 0xb7, 0x74, 0x50, 0x3a, 0x6c, 0xf6, 0x3b, 0x2f, 0xa2, 0x8b, 0x17, 0x74, 0x82,
	0xfd, 0x1d, 0x84, 0x1e, 0x32, 0xea, 0x50, 0xc6, 0xe8, 0x06, 0x77, 0xb7, 0x0f, 0x4a, 0x87, 0x35,
	0xf3, 0x1c, 0x6a, 0xf9, 0x94, 0x06, 0x3b, 0x93, 0xf3, 0xc1, 0xc0, 0x9a, 0x4c, 0xf4, 0x2d, 0xa3,
	0x0d, 0x8d, 0xd1, 0x87, 0x8f, 0x47, 0x27, 0xa3, 0xa1, 0x7d, 0x7a, 0x34, 0x3e, 0xfa, 0x5e, 0x2f,
	0x91, 0xa1, 0x23, 0x3a, 0x6d, 0x0f, 0xad, 0x0f, 0x23, 0x6b, 0xa8, 0x6f, 0x1b, 0x7b, 0xd0, 0x3e,
	0x7b, 0x3f, 0xb6, 0x26, 0xef, 0x7f, 0x38, 0x19, 0xda, 0x63, 0xeb, 0x68, 0xf0, 0xde, 0x1a, 0xea,
	0x8a, 0xf9, 0x73, 0x09, 0xc0, 0x0a, 0x30, 0x8a, 0xa3, 0xd8, 0x4f, 0x90, 0xb1, 0x07, 0x0d, 0x94,
	0x7d, 0xd9, 0xbe, 0x47, 0xed, 0xab, 0x19, 0xfb, 0xd0, 0x12, 0x86, 0x03, 0x67, 0x8e, 0x98, 0x55,
	0x46, 0x1b, 0x6a, 0xd3, 0x70, 0x8e, 0xec, 0xc8, 0xb9, 0x42, 0x5d, 0x85, 0x0e, 0xb5, 0x60, 0xc7,
	0xf1, 0xbc, 0x18, 0x25, 0x49, 0xb7, 0x4c, 0x07, 0x1a, 0xa0, 0x46, 0xd3, 0x30, 0x40, 0x5d, 0x35,
	0xfd, 0x44, 0x73, 0xc7, 0x9f, 0x75, 0x2b, 0xf4, 0x53, 0x87, 0xaa, 0x1b, 0x06, 0xd8, 0x71, 0x71,
	0xd2, 0xdd, 0xa1, 0x23, 0x75, 0x28, 0x7b, 0x28, 0x71, 0xbb, 0x55, 0xee, 0xf7, 0xde, 0x31, 0xc2,
	0xb9, 0x89, 0x63, 0x94, 0x44, 0x61, 0x90, 0x20, 0xc3, 0x04, 0xc8, 0x6d, 0xa2, 0x76, 0x6a, 0xfd,
	0x26, 0xc5, 0x31, 0x77, 0xa7, 0x0b, 0x2a, 0x22, 0xa0, 0x51, 0x6b, 0xb5, 0x7e, 0x2d, 0x83, 0xd9,
	0xfc, 0x1a, 0xea, 0xf9, 0xba, 0xd1, 0x70, 0x8d, 0xe3, 0xa6, 0x05, 0xc6, 0x8a, 0xad, 0xd7, 0xa0,
	0xb4, 0x7e, 0xb7, 0xff, 0x96, 0x60, 0xe7, 0x34, 0x0e, 0xbd, 0x85, 0x8b, 0x0d, 0x03, 0x20, 0x62,
	0x3f, 0x73, 0xc9, 0x5d, 0xa8, 0xa7, 0x63, 0x02, 0xb8, 0x4b, 0xdb, 0x28, 0xcb, 0x98, 0x97, 0x8b,
	0x98, 0xab, 0x32, 0xe6, 0x15, 0x19, 0x73, 0x86, 0xf0, 0x23, 0xe8, 0xcc, 0xc3, 0xc0, 0xc7, 0x61,
	0x6c, 0xbb, 0x74, 0x07, 0x7b, 0x1a, 0x26, 0x98, 0x01, 0xbe, 0x62, 0x32, 0x0a, 0x63, 0xdc, 0xad,
	0x1d, 0x94, 0x0e, 0x55, 0x29, 0x5a, 0x20, 0x45, 0x4b, 0xa3, 0x78, 0x3d, 0x81, 0x1a, 0xf7, 0x73,
	0x34, 0x24, 0x9e, 0x9e, 0x16, 0x3c, 0x35, 0x67, 0xd0, 0xe2, 0x63, 0x19, 0x9a, 0x4f, 0x97, 0x00,
	0xd1, 0xfa, 0x0d, 0x82, 0x5d, 0xae, 0xe9, 0x31, 0xec, 0xf0, 0x25, 0x1c, 0x5b, 0x4d, 0x98, 0xcf,
	0x71, 0x57, 0x8a, 0xb8, 0xff, 0xbd, 0x04, 0xfa, 0x18, 0x25, 0xe1, 0x22, 0x76, 0xd1, 0x79, 0xec,
	0x9f, 0xcd, 0xa3, 0x59, 0x42, 0x7c, 0x58, 0xc4, 0xbe, 0x8d, 0xe7, 0xd1, 0x8c, 0xc3, 0xbf, 0x07,
	0x8d, 0x98, 0xaf, 0x4a, 0xf1, 0x57, 0x0e, 0x6b, 0xc6, 0x4b, 0xa8, 0x44, 0x4e, 0xec, 0xcc, 0x93,
	0xae, 0x72, 0xa0, 0x1c, 0x6a, 0xfd, 0x03, 0xa2, 0xb8, 0xa8, 0xee, 0xc5, 0x29, 0x5d, 0x62, 0x05,
	0x38, 0xbe, 0xed, 0xfd, 0x0a, 0x34, 0xe1, 0xd3, 0xd0, 0x40, 0xf9, 0x84, 0x6e, 0xf9, 0x26, 0x0d,
	0x50, 0xaf, 0x9d, 0xd9, 0x82, 0x07, 0xf7, 0x37, 0xdb, 0xdf, 0x95, 0xcc, 0x7f, 0x97, 0xa0, 0x9e,
	0xea, 0x3b, 0xbb, 0x8d, 0x08, 0x5f, 0xf5, 0xcc, 0x10, 0x7c, 0x1b, 0x09, 0xdc, 0xea, 0x81, 0x21,
	0xcf, 0x08, 0x3c, 0x91, 0x19, 0xa5, 0x6c, 0x0a, 0x71, 0x79, 0x53, 0x88, 0x55, 0x1a, 0xe2, 0x6f,
	0xa1, 0x9d, 0xed, 0x94, 0xe1, 0x54, 0xa1, 0xc8, 0xee, 0xae, 0x02, 0xc0, 0x68, 0x42, 0x05, 0x05,
	0xce, 0xc5, 0x0c, 0x51, 0x76, 0x55, 0x0b, 0xf9, 0xfb, 0x1c, 0x9a, 0xa2, 0x8b, 0xa3, 0xe1, 0x7a,
	0x27, 0xcd, 0x3f, 0x97, 0x60, 0x57, 0x5c, 0x9c, 0x51, 0xe4, 0x9b, 0x35, 0x22, 0x5a, 0xdf, 0x10,
	0x4d, 0xe2, 0x1b, 0x3c, 0x13, 0xc2, 0x49, 0x56, 0x73, 0xce, 0xe8, 0xc5, 0xa5, 0x1b, 0x88, 0xf3,
	0xb3, 0x02, 0xb5, 0x23, 0x52, 0xbc, 0xc7, 0x8b, 0x19, 0xcd, 0x77, 0x5a, 0xc9, 0xed, 0x78, 0x31,
	0x93, 0xab, 0xa2, 0x30, 0x2c, 0x04, 0x84, 0x9a, 0x1b, 0x21, 0x07, 0xdb, 0x09, 0x0a, 0x3c, 0x66,
	0x83, 0x42, 0x0b, 0x3d, 0x37, 0x97, 0xcc, 0x4d, 0x50, 0xe0, 0x51, 0x2b, 0xbe, 0x82, 0xc7, 0x7e,
	0xe0, 0x63, 0x3b, 0x46, 0x4e, 0x26, 0x83, 0x62, 0xdb, 0x27, 0x81, 0xb9, 0x76, 0x66, 0x34, 0x66,
	0xaa, 0x71, 0x00, 0xdd, 0xb9, 0x73, 0x63, 0x8b, 0x7a, 0xb3, 0x15, 0x2c, 0x70, 0x0f, 0xa1, 0xed,
	0x12, 0xb4, 0xdc, 0x05, 0xf6, 0xaf, 0x91, 0xed, 0x86, 0x8b, 0x00, 0xd3, 0xc0, 0xa9, 0x24, 0x44,
	0x11, 0x8a, 0xfd, 0xd0, 0xa3, 0x21, 0x52, 0x8d, 0x07, 0xd0, 0x74, 0xc3, 0xc0, 0xf3, 0xb1, 0x1f,
	0x06, 0xcc, 0xbc, 0x6a, 0x5a, 0x5a, 0xf0, 0x34, 0x46, 0xc9, 0x34, 0x9c, 0x79, 0x34, 0xe3, 0xb7,
	0x49, 0x34, 0x17, 0x81, 0x8f, 0x79, 0xb6, 0xef, 0x43, 0x2b, 0x8a, 0xd1, 0x25, 0x8a, 0xed, 0x04,
	0x5d, 0xa3, 0xd8, 0xc7, 0xb7, 0x34, 0xf1, 0x55, 0x81, 0x04, 0x75, 0x4a, 0x82, 0x47, 0xd0, 0xf1,
	0x83, 0xa9, 0x7f, 0xe1, 0x73, 0x74, 0xf8, 0x64, 0x83, 0x4e, 0xb6, 0xa1, 0x36, 0x47, 0x38, 0xf6,
	0x5d, 0x82, 0x65, 0x93, 0x2a, 0xee, 0x80, 0xc6, 0x87, 0x28, 0x8e, 0x2d, 0x3a, 0xf8, 0x90, 0x50,
	0xf1, 0xd2, 0x96, 0xb1, 0xd7, 0x29, 0x55, 0xbe, 0x02, 0x2d, 0x8b, 0x0f, 0x2b, 0xdf, 0x2b, 0x22,
	0x64, 0xde, 0x40, 0x3b, 0x5b, 0x95, 0x91, 0xe9, 0xff, 0x57, 0xad, 0xd5, 0xfa, 0x2d, 0x12, 0x1a,
	0x51, 0xe7, 0x53, 0x80, 0x7c, 0x1d, 0xe7, 0x50, 0x43, 0x5a, 0xb4, 0x81, 0x40, 0xa7, 0x50, 0x9b,
	0xf8, 0x33, 0x14, 0xb8, 0x44, 0x53, 0x46, 0x14, 0x37, 0x0c, 0x2e, 0xfd, 0xab, 0x9c, 0x41, 0x4b,
	0x66, 0x6f, 0xa7, 0x60, 0x64, 0x04, 0x4e, 0x33, 0xda, 0x3c, 0x87, 0x1d, 0xae, 0x91, 0x58, 0x96,
	0xb0, 0x9f, 0x85, 0x8a, 0x99, 0x6f, 0xa9, 0x43, 0xd5, 0x5b, 0x60, 0x87, 0x04, 0x98, 0x2a, 0x55,
	0xd9, 0x69, 0xe2, 0xd9, 0xd8, 0x9f, 0xa3, 0x04, 0x3b, 0xf3, 0x88, 0xaa, 0x55, 0xcc, 0x11, 0xb4,
	0xb8, 0x54, 0x06, 0xd0, 0x63, 0xd8, 0xe1, 0xea, 0xb9, 0x6e, 0x4d, 0xd0, 0xbd, 0xe1, 0x94, 0xfb,
	0x67, 0x09, 0x1a, 0x69, 0x7e, 0x1d, 0xc7, 0xe1, 0x22, 0x62, 0x01, 0xe4, 0x8e, 0x5c, 0x91, 0x91,
	0xdc, 0xf5, 0x47, 0xd0, 0x29, 0x4c, 0x09, 0x09, 0xf4, 0x52, 0xa8, 0x76, 0x69, 0x0d, 0x4a, 0x38,
	0xc8, 0xab, 0x8b, 0x50, 0x5a, 0x74, 0x58, 0x81, 0x7b, 0x02, 0xb5, 0x54, 0x9e, 0x9c, 0x88, 0xa4,
	0x78, 0xd7, 0x45, 0x31, 0xf3, 0x13, 0x54, 0xd3, 0xdf, 0x45, 0xb4, 0xd7, 0x1e, 0x09, 0x19, 0x23,
	0x8b, 0x0e, 0x29, 0xfc, 0xf4, 0x5f, 0xae, 0x51, 0xd4, 0x1a, 0xf3, 0x1f, 0x14, 0x17, 0x17, 0xf9,
	0xd7, 0x28, 0x16, 0x70, 0x61, 0x03, 0x2b, 0x71, 0x91, 0xa6, 0x84, 0xed, 0x5b, 0xb0, 0xf3, 0x13,
	0xba, 0x98, 0x86, 0xe1, 0x27, 0xbe, 0xe9, 0x03, 0x68, 0xf2, 0x81, 0x34, 0xc3, 0xca, 0x52, 0x0d,
	0x56, 0x73, 0x38, 0x98, 0xce, 0xa4, 0x5b, 0x11, 0xe1, 0x60, 0x83, 0xa6, 0x47, 0xe0, 0x60, 0xbf,
	0x19, 0x1c, 0xdc, 0x00, 0x19, 0x0e, 0x3e, 0x28, 0xd8, 0x93, 0xf5, 0x15, 0x8a, 0xdc, 0x75, 0xb0,
	0x28, 0x34, 0xa1, 0xf2, 0x13, 0x72, 0xa7, 0x0e, 0x3b, 0x59, 0x6a, 0xe6, 0x67, 0x68, 0x66, 0xa9,
	0xf3, 0x65, 0x38, 0xa4, 0xee, 0xb1, 0x6d, 0x4d, 0xde, 0x68, 0xd3, 0x2c, 0x22, 0x5d, 0xa7, 0xb2,
	0x94, 0xa9, 0xe6, 0xbf, 0x14, 0x5e, 0x30, 0x06, 0x34, 0x05, 0xd7, 0xa7, 0xe4, 0x43, 0x68, 0x4b,
	0x13, 0x72, 0x59, 0x17, 0xb2, 0x95, 0x1a, 0xc5, 0x39, 0x69, 0x48, 0x9b, 0x31, 0xdf, 0x7e, 0x01,
	0x4d, 0x99, 0x2a, 0x14, 0x15, 0xad, 0xdf, 0x16, 0x89, 0x28, 0x2c, 0x15, 0x7d, 0xa5, 0x80, 0x65,
	0x4b, 0x45, 0xe6, 0x74, 0x40, 0x4b, 0x2b, 0x2f, 0xb1, 0xb9, 0x92, 0xd6, 0x8b, 0x6c, 0xd0, 0x9d,
	0xf2, 0x26, 0xef, 0x5b, 0xd0, 0x16, 0x91, 0xe7, 0x60, 0x94, 0x17, 0xf8, 0x66, 0xbf, 0x97, 0x19,
	0xca, 0x70, 0x78, 0x71, 0x4e, 0x97, 0xd0, 0x73, 0xa8, 0x03, 0x1a, 0xe3, 0x10, 0xad, 0x11, 0xb4,
	0xfc, 0xd3, 0xce, 0xd4, 0xf3, 0x93, 0x7c, 0x14, 0xd2, 0xc8, 0x72, 0xba, 0x69, 0x12, 0xdd, 0xea,
	0x34, 0xce, 0x01, 0x80, 0xa0, 0xb6, 0x0e, 0xd5, 0xb1, 0x35, 0xb0, 0x46, 0x1f, 0xad, 0xb1, 0xbe,
	0x65, 0x34, 0xa0, 0x76, 0x74, 0x62, 0x8d, 0xcf, 0xc6, 0xe7, 0x27, 0x96, 0x5e, 0x62, 0x93, 0x93,
	0x1f, 0xce, 0xc7, 0x03, 0x4b, 0x27, 0x67, 0x4d, 0x75, 0x62, 0x7d, 0xb4, 0xc6, 0xa3, 0xb3, 0x1f,
	0x75, 0x85, 0x5c, 0x62, 0xac, 0x77, 0xef, 0xac, 0xc1, 0xd9, 0xe8, 0xa3, 0x75, 0x36, 0xfa, 0xde,
	0xd2, 0xcb, 0x06, 0x40, 0xc5, 0xfa, 0x70, 0xf4, 0xf6, 0xc4, 0xd2, 0x55, 0xa3, 0x0a, 0xe5, 0xa1,
	0x35, 0x19, 0xe8, 0x15, 0xf3, 0x10, 0x1a, 0x82, 0x4b, 0x1b, 0xea, 0xad, 0xf9, 0xa7, 0x12, 0x74,
	0x84, 0xa5, 0x59, 0xc5, 0x7b, 0xbe, 0x5a, 0x80, 0x47, 0x40, 0x56, 0xfe, 0x35, 0xd4, 0xc5, 0xb5,
	0xbc, 0x0c, 0xb6, 0x0a, 0x0b, 0x37, 0x1c, 0x0d, 0x7f, 0x55, 0xa1, 0x4e, 0x57, 0xbe, 0xf7, 0x13,
	0x1c, 0xc6, 0xb7, 0xa4, 0x72, 0x30, 0x8d, 0x53, 0x36, 0xb0, 0xa2, 0xc3, 0xc8, 0xed, 0xca, 0x5a,
	0x3e, 0x36, 0x41, 0xe9, 0xa9, 0x2c, 0xb1, 0x20, 0xad, 0x3d, 0x45, 0x6a, 0xa8, 0xeb, 0xab, 0x58,
	0x65, 0x53, 0x59, 0xde, 0x59, 0x5b, 0xe2, 0xaa, 0x4b, 0xe5, 0x92, 0xd2, 0xad, 0x96, 0x0a, 0x50,
	0x33, 0x91, 0x67, 0xa7, 0xd3, 0x9c, 0x41, 0x2b, 0x33, 0x5f, 0xdb, 0x94, 0xf9, 0xf5, 0xe5, 0x52,
	0xd6, 0x58, 0x2e, 0x65, 0x44, 0xba, 0x98, 0xa4, 0x79, 0x97, 0xd1, 0x03, 0x03, 0xc7, 0xfe, 0xd5,
	0x15, 0x8a, 0x85, 0xa6, 0x82, 0x37, 0x1b, 0x85, 0x2a, 0xa2, 0xaf, 0xa8, 0x22, 0xc6, 0x33, 0x52,
	0x1b, 0x69, 0x03, 0x46, 0x9d, 0x6c, 0xaf, 0xed, 0xe9, 0x9e, 0xc0, 0xbe, 0xbb, 0x88, 0x63, 0x14,
	0xe0, 0xb4, 0x63, 0xcb, 0x9a, 0x35, 0x83, 0xee, 0xf6, 0x18, 0x76, 0x03, 0x74, 0xb3, 0x3c, 0xdb,
	0x49, 0x67, 0x79, 0x4b, 0x28, 0xcf, 0xee, 0x66, 0xed, 0x7b, 0xde, 0x0a, 0x66, 0x93, 0x7b, 0x74,
	0xf2, 0xff, 0xe0, 0x51, 0x8c, 0xfe, 0xb8, 0x40, 0x09, 0xb6, 0x83, 0x10, 0xfb, 0x97, 0xbe, 0x4b,
	0x9b, 0x00, 0x3b, 0xc1, 0x0e, 0x5e, 0x24, 0xdd, 0x07, 0x29, 0x7d, 0xd0, 0x35, 0x31, 0x8e, 0xe6,
	0xf4, 0x3e, 0xcd, 0x8d, 0xff, 0xa4, 0xb9, 0xc1, 0x69, 0x39, 0x66, 0x5a, 0xee, 0xc3, 0xce, 0xa5,
	0xb6, 0x46, 0x59, 0xd5, 0xd6, 0x64, 0x57, 0xd7, 0xf4, 0x6a, 0xa7, 0xa6, 0xb5, 0x9d, 0xde, 0x6c,
	0x59, 0xe7, 0xda, 0x00, 0x75, 0xe6, 0xcf, 0x7d, 0xcc, 0x1b, 0xd7, 0x06, 0xa8, 0x97, 0x3e, 0x9a,
	0xa5, 0xb4, 0xab, 0x43, 0xf9, 0x72, 0xf1, 0xf9, 0x33, 0x67, 0x9b, 0x01, 0x90, 0x60, 0x27, 0xc6,
	0x79, 0xa5, 0x52, 0x48, 0x1f, 0x94, 0x76, 0x3d, 0x94, 0x5e, 0x8a, 0xf9, 0x23, 0xec, 0xca, 0x6e,
	0xf2, 0x1a, 0xf0, 0x2c, 0x35, 0x9a, 0xfb, 0xd9, 0x2d, 0x51, 0x06, 0xe8, 0x19, 0x03, 0xf2, 0x74,
	0xcd, 0x1a, 0x20, 0x45, 0xce, 0xec, 0x11, 0xc0, 0x64, 0x71, 0x75, 0x85, 0x12, 0x82, 0x38, 0x51,
	0x98, 0x64, 0x5f, 0x79, 0x49, 0xa1, 0x0a, 0xf3, 0x65, 0xec, 0x9e, 0x9c, 0x2f, 0xe4, 0xcf, 0x3d,
	0x13, 0xa8, 0x4b, 0x6b, 0xd6, 0x9e, 0x57, 0x05, 0x50, 0x37, 0x05, 0xc0, 0x1c, 0x83, 0x91, 0x2b,
	0x15, 0x1f, 0x52, 0x0a, 0xdb, 0xf3, 0x87, 0x14, 0xc1, 0x97, 0xb5, 0xd5, 0xec, 0xf9, 0x37, 0xe4,
	0x7e, 0x27, 0x71, 0xbf, 0x06, 0xea, 0x3b, 0xff, 0x06, 0x79, 0xfa, 0x96, 0xd1, 0x02, 0x0d, 0xdd,
	0x44, 0x61, 0x80, 0x02, 0xec, 0x3b, 0x33, 0xbd, 0xd4, 0xff, 0x5b, 0x93, 0x1f, 0xc3, 0x56, 0x70,
	0xe5, 0x07, 0xc8, 0x78, 0x03, 0xfa, 0x20, 0x46, 0x0e, 0x46, 0xc2, 0xa3, 0x4d, 0xe1, 0x11, 0xa7,
	0xf7, 0x40, 0xfe, 0x4e, 0xed, 0x36, 0xb7, 0x8c, 0xdf, 0x81, 0x3e, 0x44, 0x33, 0x24, 0x49, 0xeb,
	0xf2, 0xea, 0xd1, 0x70, 0x83, 0xfc, 0x1b, 0xd0, 0xd9, 0x41, 0x75, 0xcf, 0xdd, 0x1b, 0xd2, 0xcb,
	0xd4, 0x8a, 0xad, 0x1f, 0x92, 0x91, 0x95, 0xcf, 0x57, 0xe6, 0x96, 0xf1, 0x0a, 0x1a, 0xcc, 0xf7,
	0xf4, 0x1d, 0x43, 0x7c, 0xd4, 0xe8, 0x75, 0x84, 0x0f, 0x41, 0xe8, 0xd7, 0xd0, 0x60, 0x2e, 0xa7,
	0x42, 0xf2, 0x4b, 0xc9, 0x3a, 0xb1, 0x57, 0xd0, 0x60, 0x9e, 0xde, 0x65, 0xaf, 0x3e, 0xc0, 0x31,
	0xc2, 0x77, 0xdb, 0xe8, 0x2d, 0x18, 0xcc, 0x29, 0xe9, 0xa2, 0xbd, 0x74, 0xf5, 0xee, 0x75, 0x8b,
	0x23, 0x82, 0x8e, 0x21, 0x18, 0xcc, 0x47, 0x49, 0xc7, 0x8a, 0x9b, 0xfe, 0x46, 0x2d, 0x6f, 0xc1,
	0x60, 0x2e, 0x7f, 0x81, 0x25, 0x47, 0xd0, 0x3a, 0x46, 0xf8, 0x8b, 0xcc, 0x78, 0x0d, 0x2d, 0x06,
	0x48, 0x7e, 0x8a, 0xc8, 0x87, 0x4a, 0x6f, 0x4f, 0xfa, 0x14, 0x44, 0x7f, 0x0b, 0x2d, 0x86, 0x43,
	0x2e, 0x5a, 0xbc, 0xa4, 0xae, 0x17, 0x7e, 0x0d, 0x2d, 0xe6, 0xfe, 0xdd, 0xf7, 0xfd, 0x0e, 0xea,
	0xc7, 0x08, 0xdf, 0x67, 0xd3, 0x8c, 0xd2, 0xe9, 0x65, 0x51, 0xbc, 0x39, 0x32, 0xca, 0x14, 0x2e,
	0x9b, 0x4c, 0x88, 0xb9, 0x79, 0x47, 0x21, 0xe6, 0xde, 0x5d, 0x84, 0x5e, 0x52, 0x42, 0xdf, 0x45,
	0xe2, 0xf7, 0xd0, 0x16, 0xa2, 0xc7, 0x5b, 0xbb, 0x62, 0xaf, 0xd7, 0xdb, 0x2f, 0x0c, 0xc8, 0x0a,
	0x84, 0x18, 0xde, 0x4f, 0x81, 0x10, 0xc7, 0x7b, 0x28, 0x78, 0x03, 0xcd, 0x34, 0x9a, 0xf7, 0x90,
	0x7e, 0x47, 0x33, 0x40, 0x3a, 0xff, 0xf6, 0x8b, 0x27, 0x22, 0xef, 0x14, 0x58, 0x1a, 0xac, 0x3a,
	0x5b, 0x59, 0xa9, 0xe5, 0xcc, 0xc8, 0x0f, 0x95, 0xc2, 0x21, 0xc3, 0x4a, 0xed, 0xf2, 0x01, 0xc5,
	0xa4, 0x39, 0x45, 0xee, 0x29, 0xcd, 0xb9, 0x72, 0x1f, 0xe9, 0xd7, 0xb4, 0xcc, 0xdf, 0x4b, 0xf4,
	0x97, 0xa0, 0x09, 0xe5, 0xc3, 0x90, 0x9e, 0x20, 0x7a, 0xf2, 0x83, 0xc4, 0xd6, 0xdb, 0xf2, 0x1f,
	0xb6, 0xa3, 0x8b, 0x8b, 0x0a, 0xfd, 0x67, 0xd1, 0xab, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x2e,
	0xa5, 0x1b, 0x82, 0x3b, 0x1a, 0x00, 0x00,
}
